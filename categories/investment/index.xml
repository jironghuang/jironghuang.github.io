<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>investment on Jirong&#39;s sandbox</title>
    <link>/categories/investment/</link>
    <description>Recent content in investment on Jirong&#39;s sandbox</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Wed, 27 Nov 2019 11:46:49 +0800</lastBuildDate>
    <atom:link href="/categories/investment/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Free lunch does exist in Singapore - SRS analysis</title>
      <link>/post/srs_analysis/</link>
      <pubDate>Wed, 27 Nov 2019 11:46:49 +0800</pubDate>
      
      <guid>/post/srs_analysis/</guid>
      <description>

&lt;h2 id=&#34;srs-analysis&#34;&gt;SRS analysis&lt;/h2&gt;

&lt;p&gt;I haven&amp;rsquo;t paid much attention to SRS and CPF RA contributions as a way to reduce taxable income. But lately, I realised you could boost investment portfolio returns through this avenue at literally 0 cost.&lt;/p&gt;

&lt;p&gt;I find this &lt;a href=&#34;https://newacademyoffinance.com/maximize-srs-contribution-and-withdrawal/&#34;&gt;blog post&lt;/a&gt; written by a local finance blogger to be really helpful in understanding the SRS contributions and withdrawl mechanics.&lt;/p&gt;

&lt;p&gt;For my own understanding, I also did some quick analysis using google sheet (see &amp;lsquo;Analysis in google sheet&amp;rsquo; section) to evaluate if this works, and to my surprise, I found that free lunch does exist in Singapore!&lt;/p&gt;

&lt;h2 id=&#34;assumptions&#34;&gt;Assumptions&lt;/h2&gt;

&lt;p&gt;I wouldn&amp;rsquo;t bore you with the mechanics as the steps could be found in the google sheet but I will do a quick summary of my findings.&lt;/p&gt;

&lt;p&gt;In my analysis, I assume 7% marginal tax rate because that&amp;rsquo;s the lower bound when contributing to SRS starts to make sense - accounting for the 5% penalty for early withdrawal.&lt;/p&gt;

&lt;p&gt;For robustness, I did scenario analysis across 1-10% myriad of possible invesment returns.&lt;/p&gt;

&lt;p&gt;For this example, I extended the cashflow only till the 10th year.&lt;/p&gt;

&lt;p&gt;Maximum allowable contribution of $15.3k/ year is used here.&lt;/p&gt;

&lt;h2 id=&#34;quick-summary-of-analysis&#34;&gt;Quick summary of analysis&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Comparing Row C and G: Over a 10 year period - assuming you invest out of SRS regime (Row G) over within SRS regime (Row C) - you enjoy an additional terminal value of $11k - 15k.&lt;/li&gt;
&lt;li&gt;Comparing Row D and G: Assuming a 5% early withdrawal penalty (broad stroke here because taxable income in year of withdrawl and amount you withdraw matters), you enjoy an additional terminal value of $3.2k - 4.4k.&lt;/li&gt;
&lt;li&gt;Comparing Row E and B: Investment returns wise, if you ignore early withdrawl penalty, you would enjoy additional returns of 1.5 - 1.6%.&lt;/li&gt;
&lt;li&gt;Comparing Row F and B: Accouting for withdrawl penalty, you would enjoy additional returns of 0.4 - 0.5%.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;caveat&#34;&gt;Caveat&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;You do lose some flexibility by contributing towards SRS because you aren&amp;rsquo;t able to liquidate entire SRS at a low cost. Because taxable income in year of withdrawl and amount you withdraw matter!&lt;/li&gt;
&lt;li&gt;Investment returns could be further boosted if you withdraw only at age 62 because only 50% of SRS is taxed at the prevailing retirement age when you opened your SRS account (currently at 62).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;analysis-in-google-sheet&#34;&gt;Analysis in google sheet&lt;/h2&gt;

&lt;iframe src=&#34;https://docs.google.com/spreadsheets/d/e/2PACX-1vQtSJfzakpUWRkryIoXaqJm7szd-g6R1SHr-aAXAlHNOFEDXYGhCBNC9UeYEYv8cYf8krgsS6LPpED9/pubhtml?gid=802197944&amp;single=true&#34; width=&#34;900&#34; height=&#34;780&#34; style=&#34;border: none;&#34;&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Setting up a database for my Jarvis</title>
      <link>/post/jarvis_database/</link>
      <pubDate>Sun, 29 Sep 2019 11:46:49 +0800</pubDate>
      
      <guid>/post/jarvis_database/</guid>
      <description>

&lt;h2 id=&#34;setting-up-a-database-for-my-jarvis&#34;&gt;Setting up a database for my Jarvis&lt;/h2&gt;

&lt;p&gt;As I run more sophiscated trading strategies, I require a proper database for training parameters and records.&lt;/p&gt;

&lt;p&gt;Previously, I was using a mix of SQLite, RDA and CSV files - but going forward I will be using Mysql (workbench) to house my data.&lt;/p&gt;

&lt;p&gt;Below is an example of database tables for my market neutral strategies. I will be using these tables for the following,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Store optimized training parameters&lt;/li&gt;
&lt;li&gt;Store trading records&lt;/li&gt;
&lt;li&gt;For my daily scheduled jobs to pull key info like parameters, number of trading days VS half life, etc.&lt;/li&gt;
&lt;li&gt;In the intermediate to long term, if I choose to automate the trading process, MySql will be able to handle concurrent connections (unlike SQlite!)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;database-schema-for-my-jarvis&#34;&gt;Database schema for my Jarvis&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;#Create hyperparameters table (with date of training)
#CREATE DATABASE IF NOT EXISTS jarvis 
#    DEFAULT CHARACTER SET utf8mb4 
#    DEFAULT COLLATE utf8mb4_unicode_ci;
    
USE jarvis; 
 
#Hyper-parameters schema 
CREATE TABLE `market_neutral_hyper_parameters` (

  id int(16) unsigned NOT NULL AUTO_INCREMENT,
  date_train date DEFAULT NULL,
  ticker1 VARCHAR(100),
  ticker2 VARCHAR(100),
  ticker1_cfd VARCHAR(100) DEFAULT NULL,
  ticker2_cfd VARCHAR(100) DEFAULT NULL, 
  ticker1_iscfd INT DEFAULT NULL,
  ticker2_iscfd INT DEFAULT NULL,
  ticker1_cur VARCHAR(100) DEFAULT NULL,
  ticker2_cur VARCHAR(100) DEFAULT NULL,  
  start_date date DEFAULT NULL,
  end_date date DEFAULT NULL,  
  bband_days INT,
  finance_rates DECIMAL(18,4),
  path_rda VARCHAR(100),
  is_coint_full INT,
  is_coint_train INT,
  is_coint_test INT,
  half_life DECIMAL(18,4),
  half_life_train DECIMAL(18,4),
  half_life_test DECIMAL(18,4),
  ret_yr DECIMAL(18,4),
  ret_sharpe DECIMAL(18,4),
  ret_yr_train DECIMAL(18,4),
  ret_sharpe_train DECIMAL(18,4),  
  ret_yr_test DECIMAL(18,4),
  ret_sharpe_test DECIMAL(18,4),
  prop_days_mkt_train DECIMAL(18,4),
  prop_days_mkt_test DECIMAL(18,4),
  perc_win_train DECIMAL(18,4),
  perc_win_test DECIMAL(18,4),
  avg_days_mkt DECIMAL(18,4) DEFAULT NULL,
  avg_days_mkt_train DECIMAL(18,4) DEFAULT NULL,
  avg_days_mkt_test DECIMAL(18,4) DEFAULT NULL,
  
  UNIQUE KEY id (id)  
);

#Existing positions 
CREATE TABLE `positions` (
  pos_id int(16) unsigned NOT NULL AUTO_INCREMENT,
  id int(16),    #linked to hyper-parameters
  ticker1 VARCHAR(100),
  ticker2 VARCHAR(100),
  ticker1_cfd VARCHAR(100) DEFAULT NULL,
  ticker2_cfd VARCHAR(100) DEFAULT NULL, 
  ticker1_iscfd INT DEFAULT NULL,
  ticker2_iscfd INT DEFAULT NULL,
  ticker1_cur VARCHAR(100) DEFAULT NULL,
  ticker2_cur VARCHAR(100) DEFAULT NULL,
  entry_date date DEFAULT NULL,
  exit_date date DEFAULT NULL,
  entry_price1 DECIMAL(18,4),
  entry_price2 DECIMAL(18,4),
  exit_price1 DECIMAL(18,4) DEFAULT NULL,
  exit_price2 DECIMAL(18,4) DEFAULT NULL,
  entry_ratio DECIMAL(18,4),
  exit_expect_ratio DECIMAL(18,4),  #based on MA on entry day
  exit_expect_profit DECIMAL(18,4),
  exit_actual_ratio DECIMAL(18,4) DEFAULT NULL,
  num_pos1 INT,
  num_pos2 INT,
  realised_profits DECIMAL(18,4) DEFAULT NULL,   #based on report
  cost DECIMAL(18,4) DEFAULT NULL, 
  is_active INT,
  
  UNIQUE KEY pos_id (pos_id)  
)
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Market Neutral Strategy - DAX Index and EWG ETF</title>
      <link>/post/market_neutral_ewg/</link>
      <pubDate>Mon, 23 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/market_neutral_ewg/</guid>
      <description>


&lt;div id=&#34;dax-index-and-germany-etf&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;DAX index and Germany ETF&lt;/h2&gt;
&lt;p&gt;I will keep it short in this post since I espoused on this strategy a couple of times.&lt;/p&gt;
&lt;p&gt;I discovered another market neutral opportunity this month.&lt;/p&gt;
&lt;p&gt;And this is based on ratio between Germany DAX index and MSCI based Germany ETF (EWG)&lt;/p&gt;
&lt;p&gt;Based on backtest, sharpe ratio is close to 1.16.&lt;/p&gt;
&lt;p&gt;The composition between these 2 indexes are largely similar and any significant deviation shouldn’t persist for long.&lt;/p&gt;
&lt;p&gt;The optimal lookback period for the MA component in bollinger band is approximately 30 days.&lt;/p&gt;
&lt;p&gt;As this is backed by stellar performance and economic reason, I’ve decided to deploy some capital to this strategy.&lt;/p&gt;
&lt;div id=&#34;disclosure&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Disclosure&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;I executed a short (DAX 30) CFD long (EWG) strategy on 23-September with approximately $35880 on both positions.&lt;/li&gt;
&lt;li&gt;I entered at a ratio of 12345/26.97 = 457.7308 with expected profits of 1.04%.&lt;/li&gt;
&lt;li&gt;Max holding period is 16 work days (ending on 15th October 2019) based on half life formula here (&lt;a href=&#34;http://en.wikipedia.org/wiki/Ornstein-Uhlenbeck_process&#34; class=&#34;uri&#34;&gt;http://en.wikipedia.org/wiki/Ornstein-Uhlenbeck_process&lt;/a&gt;) as advised by Ernest Chan. See his example for further explanation&lt;/li&gt;
&lt;li&gt;I’m using pushoverr notification api linked to my phone app within my cron task scheduler. It will inform me to close my positions when the ratio dips below moving average.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;suppressMessages(sapply(c(&amp;quot;zoo&amp;quot;, &amp;quot;tidyr&amp;quot;, &amp;quot;plyr&amp;quot;, &amp;quot;dplyr&amp;quot;,
         &amp;quot;gtools&amp;quot;,&amp;quot;googlesheets&amp;quot;, &amp;quot;quantmod&amp;quot;, 
         &amp;quot;urca&amp;quot;, &amp;quot;PerformanceAnalytics&amp;quot;, &amp;quot;parallel&amp;quot;, &amp;quot;TTR&amp;quot;, &amp;quot;pushoverr&amp;quot;), require, character.only = T))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                  zoo                tidyr                 plyr 
##                 TRUE                 TRUE                 TRUE 
##                dplyr               gtools         googlesheets 
##                 TRUE                 TRUE                 TRUE 
##             quantmod                 urca PerformanceAnalytics 
##                 TRUE                 TRUE                 TRUE 
##             parallel                  TTR            pushoverr 
##                 TRUE                 TRUE                 TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;source(&amp;#39;util/calculateReturns.R&amp;#39;)
source(&amp;#39;util/calculateMaxDD.R&amp;#39;)
source(&amp;#39;util/backshift.R&amp;#39;)
source(&amp;#39;util/extract_stock_prices.R&amp;#39;)
source(&amp;#39;util/cointegration_pair.R&amp;#39;)

stock1 = &amp;quot;^GDAXI&amp;quot;
stock2 = &amp;quot;EWG&amp;quot;

n_days = 30

prop_train = 0.7

start_date = &amp;quot;2000-07-01&amp;quot;
end_date = &amp;quot;2019-12-30&amp;quot;

#Start of function
data1 = df_crawl_time_series(stock1, start_date, end_date)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;getSymbols&amp;#39; currently uses auto.assign=TRUE by default, but will
## use auto.assign=FALSE in 0.5-0. You will still be able to use
## &amp;#39;loadSymbols&amp;#39; to automatically load data. getOption(&amp;quot;getSymbols.env&amp;quot;)
## and getOption(&amp;quot;getSymbols.auto.assign&amp;quot;) will still be checked for
## alternate defaults.
## 
## This message is shown once per session and may be disabled by setting 
## options(&amp;quot;getSymbols.warning4.0&amp;quot;=FALSE). See ?getSymbols for details.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## WARNING: There have been significant changes to Yahoo Finance data.
## Please see the Warning section of &amp;#39;?getSymbols.yahoo&amp;#39; for details.
## 
## This message is shown once per session and may be disabled by setting
## options(&amp;quot;getSymbols.yahoo.warning&amp;quot;=FALSE).&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: ^GDAXI contains missing values. Some functions will not work if
## objects contain missing values in the middle of the series. Consider using
## na.omit(), na.approx(), na.fill(), etc to remove or replace them.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data1 = subset(data1, select = c(&amp;quot;Date&amp;quot;, &amp;quot;Open&amp;quot;, &amp;quot;Adj.Close&amp;quot;))
names(data1) = c(&amp;quot;Date&amp;quot;, &amp;quot;Open&amp;quot;, &amp;quot;Close&amp;quot;)
data1$Date = as.Date(data1$Date)

data2 = df_crawl_time_series(stock2, start_date, end_date)
data2 = subset(data2, select = c(&amp;quot;Date&amp;quot;, &amp;quot;Open&amp;quot;, &amp;quot;Adj.Close&amp;quot;))
names(data2) = c(&amp;quot;Date&amp;quot;, &amp;quot;Open&amp;quot;, &amp;quot;Close&amp;quot;)
data2$Date = as.Date(data2$Date)

#Training and testing index
data1 = xts(data1[, -1], order.by = data1[, 1])
data2 = xts(data2[, -1], order.by = data2[, 1])

data = merge(data1, data2)
data = as.data.frame(data)
data = subset(data, !is.na(data$Close) &amp;amp; !is.na(data$Close.1))

data$ratio = data$Close/ data$Close.1

# plot(data$ratio)
bb_ratio = data.frame(BBands(data$ratio,n = n_days))
data = cbind(data, bb_ratio)
data_sub = tail(data, 1000)

plot(data_sub$ratio)
lines(data_sub$mavg, col = &amp;quot;red&amp;quot;)
lines(data_sub$up, col = &amp;quot;blue&amp;quot;)
lines(data_sub$dn, col = &amp;quot;green&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/market_neutral_ewg_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#If lower than 
data_sub$longs &amp;lt;- data_sub$ratio &amp;lt;= data_sub$dn # buy spread when its value drops below 2 standard deviations.
data_sub$shorts &amp;lt;- data_sub$ratio &amp;gt;= data_sub$up # short spread when its value rises above 2 standard deviations.

#  exit any spread position when its value is at moving average
data_sub$longExits   &amp;lt;- data_sub$ratio &amp;gt;= data_sub$mavg
data_sub$shortExits &amp;lt;- data_sub$ratio &amp;lt;= data_sub$mavg


# #  define indices for training and test sets
# trainset &amp;lt;- 1:as.integer(nrow(data) * prop_train)
# testset &amp;lt;- (length(trainset)+1):nrow(data)

#Signal
data_sub$posL1 = NA
data_sub$posL2 = NA
data_sub$posS1 = NA
data_sub$posS2 = NA

# initialize to 0
data_sub$posL1[1] &amp;lt;- 0; data_sub$posL2[1] &amp;lt;- 0
data_sub$posS1[1] &amp;lt;- 0; data_sub$posS2[1] &amp;lt;- 0

data_sub$posL1[data_sub$longs] &amp;lt;- 1
data_sub$posL2[data_sub$longs] &amp;lt;- -1

data_sub$posS1[data_sub$shorts] &amp;lt;- -1
data_sub$posS2[data_sub$shorts] &amp;lt;- 1

data_sub$posL1[data_sub$longExits] &amp;lt;- 0
data_sub$posL2[data_sub$longExits] &amp;lt;- 0
data_sub$posS1[data_sub$shortExits] &amp;lt;- 0
data_sub$posS2[data_sub$shortExits] &amp;lt;- 0

#positions
data_sub$posL1 &amp;lt;- zoo::na.locf(data_sub$posL1); data_sub$posL2 &amp;lt;- zoo::na.locf(data_sub$posL2)
data_sub$posS1 &amp;lt;- zoo::na.locf(data_sub$posS1); data_sub$posS2 &amp;lt;- zoo::na.locf(data_sub$posS2)
data_sub$position1 &amp;lt;- data_sub$posL1 + data_sub$posS1
data_sub$position2 &amp;lt;- data_sub$posL2 + data_sub$posS2

#Returns
data_sub$dailyret1 &amp;lt;- ROC(data_sub$Close) #  last row is [385,] -0.0122636689 -0.0140365802
data_sub$dailyret2 &amp;lt;- ROC(data_sub$Close.1) #  last row is [385,] -0.0122636689 -0.0140365802

#Backshifting here. But signal is for following day returns!. So can still use latest Z-score
data_sub$date = as.Date(row.names(data_sub))
data_sub = xts(data_sub[,-which(names(data_sub) == &amp;quot;date&amp;quot;)], order.by = data_sub[, which(names(data_sub) == &amp;quot;date&amp;quot;)])

#Doesn&amp;#39;t account for number of shares!!!!!
data_sub$pnl = lag(data_sub$position1, 1) * data_sub$dailyret1  + lag(data_sub$position2, 1) * data_sub$dailyret2

#Performance analytics
tryCatch({
  charts.PerformanceSummary(data_sub$pnl)
}, error = function(e){})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/market_neutral_ewg_files/figure-html/unnamed-chunk-1-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table.Drawdowns(data_sub$pnl)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         From     Trough         To   Depth Length To Trough Recovery
## 1 2017-05-11 2017-08-02 2018-01-09 -0.0622    164        57      107
## 2 2018-04-26 2018-05-29 2018-08-17 -0.0559     78        21       57
## 3 2015-10-26 2015-11-30 2015-12-17 -0.0504     38        25       13
## 4 2018-01-11 2018-02-01 2018-02-07 -0.0431     19        15        4
## 5 2016-12-08 2016-12-19 2017-03-10 -0.0425     63         8       55&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table.DownsideRisk(data_sub$pnl)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                                   pnl
## Semi Deviation                 0.0030
## Gain Deviation                 0.0057
## Loss Deviation                 0.0041
## Downside Deviation (MAR=210%)  0.0091
## Downside Deviation (Rf=0%)     0.0029
## Downside Deviation (0%)        0.0029
## Maximum Drawdown               0.0622
## Historical VaR (95%)          -0.0069
## Historical ES (95%)           -0.0104
## Modified VaR (95%)            -0.0043
## Modified ES (95%)             -0.0043&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table.AnnualizedReturns(data_sub$pnl)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                              pnl
## Annualized Return         0.0898
## Annualized Std Dev        0.0773
## Annualized Sharpe (Rf=0%) 1.1617&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Extract the moving average, ratio
update = paste(stock1, stock2,
               &amp;quot;Current ratio is:&amp;quot;, round(as.numeric(data_sub$ratio[nrow(data_sub)]), 3), 
               &amp;quot;Moving average is&amp;quot;, round(as.numeric(data_sub$mavg[nrow(data_sub)]), 3),
               &amp;quot;Expected profits left in %&amp;quot;, abs(round(100 * (as.numeric(data_sub$ratio[nrow(data_sub)]) - as.numeric(data_sub$mavg[nrow(data_sub)]))/as.numeric(data_sub$ratio[nrow(data_sub)]), 1)),
               &amp;quot;UB is&amp;quot;, round(as.numeric(data_sub$up[nrow(data_sub)]), 3),
               &amp;quot;LB is&amp;quot;, round(as.numeric(data_sub$dn[nrow(data_sub)]), 3)               
)

if(as.numeric(data_sub$ratio[nrow(data_sub)]) &amp;lt; as.numeric(data_sub$dn[nrow(data_sub)])) {
  update = paste(update, &amp;quot;Long ratio!&amp;quot;)
} else{
  update = paste(update, &amp;quot;\nDon&amp;#39;t enter\n&amp;quot;)
}

if(as.numeric(data_sub$ratio[nrow(data_sub)]) &amp;gt; as.numeric(data_sub$up[nrow(data_sub)])) {
  update = paste(update, &amp;quot;Short ratio!&amp;quot;)
} else{
  update = paste(update, &amp;quot;Don&amp;#39;t enter&amp;quot;)
}

# if(as.numeric(data_sub$ratio[nrow(data_sub)]) &amp;lt; as.numeric(data_sub$mavg[nrow(data_sub)])) {
#   update = paste(update, &amp;quot;Liquidate position!&amp;quot;)
# } else{
#   update = paste(update, &amp;quot;Hold&amp;quot;)
# }

#pushover(message = update, user = Sys.getenv(&amp;quot;pushover_user&amp;quot;), app = Sys.getenv(&amp;quot;pushover_app&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>My Investment Jarvis (In Ray Dalio&#39;s words, My Investment Principles)</title>
      <link>/post/jarvis/</link>
      <pubDate>Fri, 20 Sep 2019 11:46:49 +0800</pubDate>
      
      <guid>/post/jarvis/</guid>
      <description>

&lt;h2 id=&#34;jarvis&#34;&gt;Jarvis&lt;/h2&gt;

&lt;p&gt;Humans are imperfect.&lt;/p&gt;

&lt;p&gt;Humans are prone to biases.&lt;/p&gt;

&lt;p&gt;Humans are dumb.&lt;/p&gt;

&lt;p&gt;Humans have egos.&lt;/p&gt;

&lt;p&gt;Humans rely on intuitions which are way way overrated.&lt;/p&gt;

&lt;p&gt;And all these are blockers to sustainable positive performances in the area of investment portfolio management.&lt;/p&gt;

&lt;p&gt;But not all is lost&amp;hellip; I&amp;rsquo;ve found a way to aid me in my invesment decision making processes.&lt;/p&gt;

&lt;p&gt;And that&amp;rsquo;s Jarvis! My expert advisor to advise me what to do in different scenarios.&lt;/p&gt;

&lt;p&gt;Here is how it works,&lt;/p&gt;

&lt;h3 id=&#34;during-normal-market-conditions&#34;&gt;During normal market conditions&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;During normal market conditions, I will allocate Bonds and Cash % corresponding to my age. And this makes sense because as I grow older, my risk appetite should decrease.&lt;/li&gt;
&lt;li&gt;I allocate 5% each to Singapore index, Gold/ Silver/ Commodities and Global Reits to hedge against different economic climate (see Ray Dalio&amp;rsquo;s explanation on all weather portfolio)&lt;/li&gt;
&lt;li&gt;Lastly, I will allocate (100 – 15 - age)/ 2 % to developed and emerging market indexes/ stocks respectively&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;during-crisis-2-sd-scenario&#34;&gt;During crisis (-2 SD scenario)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Buy low sell high. That&amp;rsquo;s my mantra. In the absence of rules, humans tend to do the opposite.&lt;/li&gt;
&lt;li&gt;During mayhem, when SnP 500 hits -2SD line in my project on what is low regression line for SnP 500 (see &lt;a href=&#34;https://jironghuang.github.io/project/what-is-low-regression-approach/&#34;&gt;here&lt;/a&gt; for more info), that&amp;rsquo;s when I will be greedy. I will do a 50% leverage over my portfolio size and allocate 25% each to developed and emerging section of my portfolio.&lt;/li&gt;
&lt;li&gt;SnP 500 is chosen as my barometer because it has the longest time series. And when US sneezes, everyone tends to catch a cold.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;during-crisis-3-sd-scenario&#34;&gt;During crisis (-3 SD scenario)&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;This is the equivalent of an apocalypse. It has not even happened during the great recession&lt;/li&gt;
&lt;li&gt;I&amp;rsquo;m unsure if it will ever happen in my lifetime. But if it ever happens, I will be damn sure that I will leverage up till 100% of my portfolio.&lt;/li&gt;
&lt;li&gt;50% each will be allocated to developed and emerging section of my portfolio.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;selection-of-stuff-to-purchase&#34;&gt;Selection of stuff to purchase&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;I only rebalance my portfolio once a month&lt;/li&gt;
&lt;li&gt;Using 2 compasses (what is low &amp;amp; my 52% week high watchlist), I will sieve out tickers that are cheap and purchase them&lt;/li&gt;
&lt;li&gt;When any of the portfolio pie gets too large, I will sell them to restore the balance in my portfolio&lt;/li&gt;
&lt;li&gt;Each counter with the exception of US, World and China will take up less than 5% of portfolio&lt;/li&gt;
&lt;li&gt;Pls find my broad classification of developed and developing countries in diagram below&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;market-neutral-strategies&#34;&gt;Market neutral strategies&lt;/h3&gt;

&lt;p&gt;On a separate note, I also run market neutral strategies to try and profit in all economic climates. Returns from this section will tend to be lesser than my overall portfolio unless I leverage significantly. These are documented under &lt;a href=&#34;https://jironghuang.github.io/skin/skin-in-the-game/&#34;&gt;&amp;lsquo;Skin in the game&amp;rsquo;&lt;/a&gt; section of my blog.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/post/img/jarvis.png&#34; alt=&#34;/post/img/jarvis.png&#34;&gt;&lt;/p&gt;

&lt;h2 id=&#34;snippets-of-my-jarvis&#34;&gt;Snippets of my Jarvis&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;if(data$Prop[which(data$Assets == &amp;quot;World + Developed (ex real estate)&amp;quot;)] &amp;gt; data$Prop[which(data$Assets == &amp;quot;Emerging&amp;quot;)]){
  
  msg = &amp;quot;Bro, you are overweight in Developed. Shift to Emerging\n&amp;quot;
  msg = paste(msg, &amp;quot;World is %&amp;quot;, 100 * data$Prop[which(data$Assets == &amp;quot;World + Developed (ex real estate)&amp;quot;)])
  msg = paste(msg, &amp;quot;Emerging is %&amp;quot;, 100 * data$Prop[which(data$Assets == &amp;quot;Emerging&amp;quot;)])
  
  pushover(message = msg, 
           user = Sys.getenv(&amp;quot;pushover_user&amp;quot;), app = Sys.getenv(&amp;quot;pushover_app&amp;quot;)
           )
}

if(data$Prop[which(data$Assets == &amp;quot;Emerging&amp;quot;)] &amp;gt; data$Prop[which(data$Assets == &amp;quot;World + Developed (ex real estate)&amp;quot;)]){
  
  msg = &amp;quot;Bro, you are overweight in Emerging. Shift to Developed\n&amp;quot;
  msg = paste(msg, &amp;quot;World is %&amp;quot;, 100 * data$Prop[which(data$Assets == &amp;quot;World + Developed (ex real estate)&amp;quot;)])
  msg = paste(msg, &amp;quot;Emerging is %&amp;quot;, 100 * data$Prop[which(data$Assets == &amp;quot;Emerging&amp;quot;)])
  
  pushover(message = msg, 
           user = Sys.getenv(&amp;quot;pushover_user&amp;quot;), app = Sys.getenv(&amp;quot;pushover_app&amp;quot;)
  )
}

if(100 * (data$Prop[which(data$Assets == &amp;quot;Bonds&amp;quot;)] + data$Prop[which(data$Assets == &amp;quot;Cash&amp;quot;)]) &amp;gt; data$Prop[which(data$Assets == &amp;quot;Age&amp;quot;)]){
  
  msg = &amp;quot;Bro, you are overweight in Bonds and Cash relative to your age. Shift it out!!!\n&amp;quot;
  msg = paste(msg, &amp;quot;Bonds is %&amp;quot;, 100 * data$Prop[which(data$Assets == &amp;quot;Bonds&amp;quot;)])
  msg = paste(msg, &amp;quot;Cash is %&amp;quot;, 100 * data$Prop[which(data$Assets == &amp;quot;Cash&amp;quot;)])
  
  pushover(message = msg, 
           user = Sys.getenv(&amp;quot;pushover_user&amp;quot;), app = Sys.getenv(&amp;quot;pushover_app&amp;quot;)
  )
}

if(100 * (data$Prop[which(data$Assets == &amp;quot;Bonds&amp;quot;)] + data$Prop[which(data$Assets == &amp;quot;Cash&amp;quot;)]) &amp;lt; data$Prop[which(data$Assets == &amp;quot;Age&amp;quot;)]){
  
  msg = &amp;quot;Bro, you are underweight in Bonds and Cash relative to your age. Shift it out!!!\n&amp;quot;
  msg = paste(msg, &amp;quot;Bonds is %&amp;quot;, 100 * data$Prop[which(data$Assets == &amp;quot;Bonds&amp;quot;)])
  msg = paste(msg, &amp;quot;Cash is %&amp;quot;, 100 * data$Prop[which(data$Assets == &amp;quot;Cash&amp;quot;)])
  
  pushover(message = msg, 
           user = Sys.getenv(&amp;quot;pushover_user&amp;quot;), app = Sys.getenv(&amp;quot;pushover_app&amp;quot;)
  )
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Market Neutral Strategy - FTSE Index and EWU ETF</title>
      <link>/post/market_neutral_ewu/</link>
      <pubDate>Wed, 18 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/market_neutral_ewu/</guid>
      <description>


&lt;div id=&#34;uk-index-and-uk-etf&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;UK index and UK ETF&lt;/h2&gt;
&lt;p&gt;I discovered another market neutral opportunity this month.&lt;/p&gt;
&lt;p&gt;And this is based on ratio between FTSE 100 index and MSCI based UK ETF (EWU)&lt;/p&gt;
&lt;p&gt;Based on backtest, sharpe ratio is close to 0.9.&lt;/p&gt;
&lt;p&gt;The composition between these 2 indexes are largely similar and any significant deviation shouldn’t persist for long.&lt;/p&gt;
&lt;p&gt;The optimal lookback period for the MA component in bollinger band is approximately 40 days.&lt;/p&gt;
&lt;p&gt;As this is backed by stellar performance and economic reason, I’ve decided to deploy some capital to this strategy.&lt;/p&gt;
&lt;div id=&#34;disclosure&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Disclosure&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;I executed a long (FTSE 100) CFD short (EWU) strategy on 18-September with approximately $25000 on both positions. Equity to loan (with no cash) outlay is only 3750 dollars on long side. I entered at a ratio of 232 with expected profits of 2.4% excluding further 2% p.a. of interest on short sale cash. I expect a 3% long finance rate of approximately 2 dollars per day. Short interest gain rate is around 1.5% translating to 1 dollars per day. Net finance cost is around 1 dollar a day.&lt;/li&gt;
&lt;li&gt;Max holding period is 24 work days (ending on 22nd October 2019) based on half life formula here (&lt;a href=&#34;http://en.wikipedia.org/wiki/Ornstein-Uhlenbeck_process&#34; class=&#34;uri&#34;&gt;http://en.wikipedia.org/wiki/Ornstein-Uhlenbeck_process&lt;/a&gt;) as advised by Ernest Chan. See his example for further explanation&lt;/li&gt;
&lt;li&gt;I’m using pushoverr notification api linked to my phone app within my cron task scheduler. It will inform me to close my positions when the ratio dips below moving average.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;suppressMessages(sapply(c(&amp;quot;zoo&amp;quot;, &amp;quot;tidyr&amp;quot;, &amp;quot;plyr&amp;quot;, &amp;quot;dplyr&amp;quot;,
         &amp;quot;gtools&amp;quot;,&amp;quot;googlesheets&amp;quot;, &amp;quot;quantmod&amp;quot;, 
         &amp;quot;urca&amp;quot;, &amp;quot;PerformanceAnalytics&amp;quot;, &amp;quot;parallel&amp;quot;, &amp;quot;TTR&amp;quot;, &amp;quot;pushoverr&amp;quot;), require, character.only = T))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                  zoo                tidyr                 plyr 
##                 TRUE                 TRUE                 TRUE 
##                dplyr               gtools         googlesheets 
##                 TRUE                 TRUE                 TRUE 
##             quantmod                 urca PerformanceAnalytics 
##                 TRUE                 TRUE                 TRUE 
##             parallel                  TTR            pushoverr 
##                 TRUE                 TRUE                 TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;source(&amp;#39;util/calculateReturns.R&amp;#39;)
source(&amp;#39;util/calculateMaxDD.R&amp;#39;)
source(&amp;#39;util/backshift.R&amp;#39;)
source(&amp;#39;util/extract_stock_prices.R&amp;#39;)
source(&amp;#39;util/cointegration_pair.R&amp;#39;)

stock1 = &amp;quot;^FTSE&amp;quot;
stock2 = &amp;quot;EWU&amp;quot;

n_days = 40

prop_train = 0.7

start_date = &amp;quot;2000-07-01&amp;quot;
end_date = &amp;quot;2019-12-30&amp;quot;

#Start of function
data1 = df_crawl_time_series(stock1, start_date, end_date)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;getSymbols&amp;#39; currently uses auto.assign=TRUE by default, but will
## use auto.assign=FALSE in 0.5-0. You will still be able to use
## &amp;#39;loadSymbols&amp;#39; to automatically load data. getOption(&amp;quot;getSymbols.env&amp;quot;)
## and getOption(&amp;quot;getSymbols.auto.assign&amp;quot;) will still be checked for
## alternate defaults.
## 
## This message is shown once per session and may be disabled by setting 
## options(&amp;quot;getSymbols.warning4.0&amp;quot;=FALSE). See ?getSymbols for details.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## WARNING: There have been significant changes to Yahoo Finance data.
## Please see the Warning section of &amp;#39;?getSymbols.yahoo&amp;#39; for details.
## 
## This message is shown once per session and may be disabled by setting
## options(&amp;quot;getSymbols.yahoo.warning&amp;quot;=FALSE).&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: ^FTSE contains missing values. Some functions will not work if
## objects contain missing values in the middle of the series. Consider using
## na.omit(), na.approx(), na.fill(), etc to remove or replace them.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data1 = subset(data1, select = c(&amp;quot;Date&amp;quot;, &amp;quot;Open&amp;quot;, &amp;quot;Adj.Close&amp;quot;))
names(data1) = c(&amp;quot;Date&amp;quot;, &amp;quot;Open&amp;quot;, &amp;quot;Close&amp;quot;)
data1$Date = as.Date(data1$Date)

data2 = df_crawl_time_series(stock2, start_date, end_date)
data2 = subset(data2, select = c(&amp;quot;Date&amp;quot;, &amp;quot;Open&amp;quot;, &amp;quot;Adj.Close&amp;quot;))
names(data2) = c(&amp;quot;Date&amp;quot;, &amp;quot;Open&amp;quot;, &amp;quot;Close&amp;quot;)
data2$Date = as.Date(data2$Date)

#Training and testing index
data1 = xts(data1[, -1], order.by = data1[, 1])
data2 = xts(data2[, -1], order.by = data2[, 1])

data = merge(data1, data2)
data = as.data.frame(data)
data = subset(data, !is.na(data$Close) &amp;amp; !is.na(data$Close.1))

data$ratio = data$Close/ data$Close.1

# plot(data$ratio)
bb_ratio = data.frame(BBands(data$ratio,n = n_days))
data = cbind(data, bb_ratio)
data_sub = tail(data, 1000)

plot(data_sub$ratio)
lines(data_sub$mavg, col = &amp;quot;red&amp;quot;)
lines(data_sub$up, col = &amp;quot;blue&amp;quot;)
lines(data_sub$dn, col = &amp;quot;green&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/market_neutral_ewu_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#If lower than 
data_sub$longs &amp;lt;- data_sub$ratio &amp;lt;= data_sub$dn # buy spread when its value drops below 2 standard deviations.
data_sub$shorts &amp;lt;- data_sub$ratio &amp;gt;= data_sub$up # short spread when its value rises above 2 standard deviations.

#  exit any spread position when its value is at moving average
data_sub$longExits   &amp;lt;- data_sub$ratio &amp;gt;= data_sub$mavg
data_sub$shortExits &amp;lt;- data_sub$ratio &amp;lt;= data_sub$mavg


# #  define indices for training and test sets
# trainset &amp;lt;- 1:as.integer(nrow(data) * prop_train)
# testset &amp;lt;- (length(trainset)+1):nrow(data)

#Signal
data_sub$posL1 = NA
data_sub$posL2 = NA
data_sub$posS1 = NA
data_sub$posS2 = NA

# initialize to 0
data_sub$posL1[1] &amp;lt;- 0; data_sub$posL2[1] &amp;lt;- 0
data_sub$posS1[1] &amp;lt;- 0; data_sub$posS2[1] &amp;lt;- 0

data_sub$posL1[data_sub$longs] &amp;lt;- 1
data_sub$posL2[data_sub$longs] &amp;lt;- -1

data_sub$posS1[data_sub$shorts] &amp;lt;- -1
data_sub$posS2[data_sub$shorts] &amp;lt;- 1

data_sub$posL1[data_sub$longExits] &amp;lt;- 0
data_sub$posL2[data_sub$longExits] &amp;lt;- 0
data_sub$posS1[data_sub$shortExits] &amp;lt;- 0
data_sub$posS2[data_sub$shortExits] &amp;lt;- 0

#positions
data_sub$posL1 &amp;lt;- zoo::na.locf(data_sub$posL1); data_sub$posL2 &amp;lt;- zoo::na.locf(data_sub$posL2)
data_sub$posS1 &amp;lt;- zoo::na.locf(data_sub$posS1); data_sub$posS2 &amp;lt;- zoo::na.locf(data_sub$posS2)
data_sub$position1 &amp;lt;- data_sub$posL1 + data_sub$posS1
data_sub$position2 &amp;lt;- data_sub$posL2 + data_sub$posS2

#Returns
data_sub$dailyret1 &amp;lt;- ROC(data_sub$Close) #  last row is [385,] -0.0122636689 -0.0140365802
data_sub$dailyret2 &amp;lt;- ROC(data_sub$Close.1) #  last row is [385,] -0.0122636689 -0.0140365802

#Backshifting here. But signal is for following day returns!. So can still use latest Z-score
data_sub$date = as.Date(row.names(data_sub))
data_sub = xts(data_sub[,-which(names(data_sub) == &amp;quot;date&amp;quot;)], order.by = data_sub[, which(names(data_sub) == &amp;quot;date&amp;quot;)])

#Doesn&amp;#39;t account for number of shares!!!!!
data_sub$pnl = lag(data_sub$position1, 1) * data_sub$dailyret1  + lag(data_sub$position2, 1) * data_sub$dailyret2

#Performance analytics
tryCatch({
  charts.PerformanceSummary(data_sub$pnl)
}, error = function(e){})&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/market_neutral_ewu_files/figure-html/unnamed-chunk-1-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table.Drawdowns(data_sub$pnl)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         From     Trough         To   Depth Length To Trough Recovery
## 1 2017-12-13 2018-02-01 2018-03-27 -0.0703     70        33       37
## 2 2015-12-18 2016-01-27 2016-03-03 -0.0626     50        25       25
## 3 2016-10-06 2016-10-28 2016-12-15 -0.0509     50        17       33
## 4 2016-06-29 2016-07-07 2016-10-05 -0.0471     68         6       62
## 5 2019-07-15 2019-08-01       &amp;lt;NA&amp;gt; -0.0442     50        14       NA&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table.DownsideRisk(data_sub$pnl)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                                   pnl
## Semi Deviation                 0.0035
## Gain Deviation                 0.0057
## Loss Deviation                 0.0045
## Downside Deviation (MAR=210%)  0.0095
## Downside Deviation (Rf=0%)     0.0034
## Downside Deviation (0%)        0.0034
## Maximum Drawdown               0.0703
## Historical VaR (95%)          -0.0083
## Historical ES (95%)           -0.0125
## Modified VaR (95%)            -0.0065
## Modified ES (95%)             -0.0065&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table.AnnualizedReturns(data_sub$pnl)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                              pnl
## Annualized Return         0.0748
## Annualized Std Dev        0.0867
## Annualized Sharpe (Rf=0%) 0.8630&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Extract the moving average, ratio
update = paste(stock1, stock2,
               &amp;quot;Current ratio is:&amp;quot;, round(as.numeric(data_sub$ratio[nrow(data_sub)]), 3), 
               &amp;quot;Moving average is&amp;quot;, round(as.numeric(data_sub$mavg[nrow(data_sub)]), 3),
               &amp;quot;Expected profits left in %&amp;quot;, abs(round(100 * (as.numeric(data_sub$ratio[nrow(data_sub)]) - as.numeric(data_sub$mavg[nrow(data_sub)]))/as.numeric(data_sub$ratio[nrow(data_sub)]), 1)),
               &amp;quot;UB is&amp;quot;, round(as.numeric(data_sub$up[nrow(data_sub)]), 3),
               &amp;quot;LB is&amp;quot;, round(as.numeric(data_sub$dn[nrow(data_sub)]), 3)               
)

if(as.numeric(data_sub$ratio[nrow(data_sub)]) &amp;lt; as.numeric(data_sub$dn[nrow(data_sub)])) {
  update = paste(update, &amp;quot;Long ratio!&amp;quot;)
} else{
  update = paste(update, &amp;quot;\nDon&amp;#39;t enter\n&amp;quot;)
}

if(as.numeric(data_sub$ratio[nrow(data_sub)]) &amp;gt; as.numeric(data_sub$up[nrow(data_sub)])) {
  update = paste(update, &amp;quot;Short ratio!&amp;quot;)
} else{
  update = paste(update, &amp;quot;Don&amp;#39;t enter&amp;quot;)
}

# if(as.numeric(data_sub$ratio[nrow(data_sub)]) &amp;lt; as.numeric(data_sub$mavg[nrow(data_sub)])) {
#   update = paste(update, &amp;quot;Liquidate position!&amp;quot;)
# } else{
#   update = paste(update, &amp;quot;Hold&amp;quot;)
# }

#pushover(message = update, user = Sys.getenv(&amp;quot;pushover_user&amp;quot;), app = Sys.getenv(&amp;quot;pushover_app&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Market Neutral Strategy - SnP500 (SPY) to Berkshire Hathaway Ratio</title>
      <link>/post/market_neutral/</link>
      <pubDate>Sat, 24 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/market_neutral/</guid>
      <description>


&lt;div id=&#34;market-neutral-strategy&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Market neutral strategy&lt;/h2&gt;
&lt;p&gt;As the negative news pile up (trade wars, slump in economy growths, etc), I sought for market neutral stategies that could perform well in any market environment.&lt;/p&gt;
&lt;p&gt;An idea that struck me recently is to exploit the pair between Berkshire and SnP 500 ETF.&lt;/p&gt;
&lt;p&gt;The SnP500 ETF/ Berkshire ratio has been falling over the years - insinuating that Berkshire still outperforms the index in the last couple of years.&lt;/p&gt;
&lt;p&gt;And what’s more impressive, it’s still widely regarded as a safe haven in times of trouble.&lt;/p&gt;
&lt;div id=&#34;strategy&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Strategy&lt;/h3&gt;
&lt;p&gt;As the market is facing headwind and I sought for a market neutral strategy.&lt;/p&gt;
&lt;p&gt;Here’s what I did,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I derive the SnP500 ETF/ Berkshire ratio over last 5 years&lt;/li&gt;
&lt;li&gt;And I fix a Bollinger Band around the ratio with n = 200 days as the moving average parameter - with 2 SD as the lower (lb) and upper bound (ub) line. Bollinger band ratio accounts for the downward trend in the ratio over time.&lt;/li&gt;
&lt;li&gt;If the ratio is below the lb, I will long SnP500 and short Berkshire Hathaway. And when it mean reverts and touches the middle moving average, I will exit the positions&lt;/li&gt;
&lt;li&gt;Conversely if the ratio is above the ub, I will short SnP500 and long Berkshire Hathaway. Similarly, I will exit the position when it touches the moving average&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;results&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Results&lt;/h3&gt;
&lt;p&gt;So how did the strategy fare? Fairly impressive I must say.&lt;/p&gt;
&lt;p&gt;Sharpe ratio is around 0.65. Annualized return is around 4.5% with the positions only in the market 30% of the time!&lt;/p&gt;
&lt;p&gt;That being said, I’m cherry picking here because the performance before this period is sub-par; probably because of a change in market regime. You may execute my code to stress-test this simple strategy.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;disclosure&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Disclosure&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;I executed a long (BRK-B) short (SPY) strategy on 26-August with approximately $11500 on both positions. Cash outlay is only 11500 dollars on long side. I’m also earning further 2% interest on cash received from short sale held as collateral. I entered at a ratio of 1.439 with expected profits of 5-6% excluding further 2% p.a. of interest on short sale cash.&lt;/li&gt;
&lt;li&gt;Max holding period is 27 work days based on half life formula here (&lt;a href=&#34;http://en.wikipedia.org/wiki/Ornstein-Uhlenbeck_process&#34; class=&#34;uri&#34;&gt;http://en.wikipedia.org/wiki/Ornstein-Uhlenbeck_process&lt;/a&gt;) as advised by Ernest Chan. See his example for further explanation&lt;/li&gt;
&lt;li&gt;I’m using pushoverr notification api linked to my phone app within my cron task scheduler. It will inform me to close my positions when the ratio dips below moving average.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;running-packages&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Running packages&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;##                  zoo                tidyr                 plyr 
##                 TRUE                 TRUE                 TRUE 
##                dplyr               gtools         googlesheets 
##                 TRUE                 TRUE                 TRUE 
##             quantmod                 urca PerformanceAnalytics 
##                 TRUE                 TRUE                 TRUE 
##             parallel                  TTR 
##                 TRUE                 TRUE&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;function&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Function&lt;/h2&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Function using bollinger band
lf_bollinger_pair_trading = function(stock1, stock2, start_date, end_date, prop_res, bband_days){
  
#Start of function
data1 = df_crawl_time_series(stock1, start_date, end_date)
data1 = base::subset(data1, select = c(&amp;quot;Date&amp;quot;, &amp;quot;Open&amp;quot;, &amp;quot;Adj.Close&amp;quot;))
names(data1) = c(&amp;quot;Date&amp;quot;, &amp;quot;Open&amp;quot;, &amp;quot;Close&amp;quot;)
data1$Date = as.Date(data1$Date)

data2 = df_crawl_time_series(stock2, start_date, end_date)
data2 = base::subset(data2, select = c(&amp;quot;Date&amp;quot;, &amp;quot;Open&amp;quot;, &amp;quot;Adj.Close&amp;quot;))
names(data2) = c(&amp;quot;Date&amp;quot;, &amp;quot;Open&amp;quot;, &amp;quot;Close&amp;quot;)
data2$Date = as.Date(data2$Date)

#Training and testing index
data1 = xts(data1[, -1], order.by = data1[, 1])
data2 = xts(data2[, -1], order.by = data2[, 1])

data = merge(data1, data2)
data = as.data.frame(data)
data = subset(data, !is.na(data$Close) &amp;amp; !is.na(data$Close.1))

data$ratio = data$Close/ data$Close.1

# plot(data$ratio)
bb_ratio = data.frame(BBands( data$ratio, n = bband_days))
data = cbind(data, bb_ratio)
data_sub = tail(data, round(nrow(data) * prop_res, 0))

plot(data_sub$ratio)
lines(data_sub$mavg, col = &amp;quot;red&amp;quot;)
lines(data_sub$up, col = &amp;quot;blue&amp;quot;)
lines(data_sub$dn, col = &amp;quot;green&amp;quot;)

#If lower than 
data_sub$longs &amp;lt;- data_sub$ratio &amp;lt;= data_sub$dn # buy spread when its value drops below 2 standard deviations.
data_sub$shorts &amp;lt;- data_sub$ratio &amp;gt;= data_sub$up # short spread when its value rises above 2 standard deviations.

#  exit any spread position when its value is at moving average
data_sub$longExits   &amp;lt;- data_sub$ratio &amp;gt;= data_sub$mavg
data_sub$shortExits &amp;lt;- data_sub$ratio &amp;lt;= data_sub$mavg


# #  define indices for training and test sets
# trainset &amp;lt;- 1:as.integer(nrow(data) * prop_train)
# testset &amp;lt;- (length(trainset)+1):nrow(data)

#Signal
data_sub$posL1 = NA
data_sub$posL2 = NA
data_sub$posS1 = NA
data_sub$posS2 = NA

# initialize to 0
data_sub$posL1[1] &amp;lt;- 0; data_sub$posL2[1] &amp;lt;- 0
data_sub$posS1[1] &amp;lt;- 0; data_sub$posS2[1] &amp;lt;- 0

data_sub$posL1[data_sub$longs] &amp;lt;- 1
data_sub$posL2[data_sub$longs] &amp;lt;- -1

data_sub$posS1[data_sub$shorts] &amp;lt;- -1
data_sub$posS2[data_sub$shorts] &amp;lt;- 1

data_sub$posL1[data_sub$longExits] &amp;lt;- 0
data_sub$posL2[data_sub$longExits] &amp;lt;- 0
data_sub$posS1[data_sub$shortExits] &amp;lt;- 0
data_sub$posS2[data_sub$shortExits] &amp;lt;- 0

#positions
data_sub$posL1 &amp;lt;- zoo::na.locf(data_sub$posL1); data_sub$posL2 &amp;lt;- zoo::na.locf(data_sub$posL2)
data_sub$posS1 &amp;lt;- zoo::na.locf(data_sub$posS1); data_sub$posS2 &amp;lt;- zoo::na.locf(data_sub$posS2)
data_sub$position1 &amp;lt;- data_sub$posL1 + data_sub$posS1
data_sub$position2 &amp;lt;- data_sub$posL2 + data_sub$posS2

#Returns
data_sub$dailyret1 &amp;lt;- ROC(data_sub$Close) #  last row is [385,] -0.0122636689 -0.0140365802
data_sub$dailyret2 &amp;lt;- ROC(data_sub$Close.1) #  last row is [385,] -0.0122636689 -0.0140365802

#Backshifting here. But signal is for following day returns!. So can still use latest Z-score
data_sub$date = as.Date(row.names(data_sub))
data_sub = xts(data_sub[,-which(names(data_sub) == &amp;quot;date&amp;quot;)], order.by = data_sub[, which(names(data_sub) == &amp;quot;date&amp;quot;)])

#Doesn&amp;#39;t account for number of shares!!!!!
data_sub$pnl = lag(data_sub$position1, 1) * data_sub$dailyret1  + lag(data_sub$position2, 1) * data_sub$dailyret2

#Performance analytics
tryCatch({
  # charts_perf = charts.PerformanceSummary(data_sub$pnl)
  charts.PerformanceSummary(data_sub$pnl)
}, error = function(e){})

dd = table.Drawdowns(data_sub$pnl)
ds_risk = table.DownsideRisk(data_sub$pnl)
ret = table.AnnualizedReturns(data_sub$pnl)


df_ret = list(data_sub = data_sub,
              dd = dd,
              ds_risk = ds_risk,
              ret = ret
              )

return(df_ret)

}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Parameters to be includded in function
stock1 = &amp;quot;SPY&amp;quot;
stock2 = &amp;quot;BRK-B&amp;quot;

start_date = &amp;quot;2000-07-01&amp;quot;
end_date = &amp;quot;2019-12-30&amp;quot;

prop_res = 0.25     #Proportion of results to show
bband_days = 200   #Bollinger band of ratio

#Storing result to function
res = lf_bollinger_pair_trading(stock1, stock2, start_date, end_date, prop_res, bband_days)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;getSymbols&amp;#39; currently uses auto.assign=TRUE by default, but will
## use auto.assign=FALSE in 0.5-0. You will still be able to use
## &amp;#39;loadSymbols&amp;#39; to automatically load data. getOption(&amp;quot;getSymbols.env&amp;quot;)
## and getOption(&amp;quot;getSymbols.auto.assign&amp;quot;) will still be checked for
## alternate defaults.
## 
## This message is shown once per session and may be disabled by setting 
## options(&amp;quot;getSymbols.warning4.0&amp;quot;=FALSE). See ?getSymbols for details.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## WARNING: There have been significant changes to Yahoo Finance data.
## Please see the Warning section of &amp;#39;?getSymbols.yahoo&amp;#39; for details.
## 
## This message is shown once per session and may be disabled by setting
## options(&amp;quot;getSymbols.yahoo.warning&amp;quot;=FALSE).&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/market_neutral_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;img src=&#34;/post/market_neutral_files/figure-html/unnamed-chunk-2-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;displaying-of-results&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Displaying of results&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Drawdown period&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;res$dd&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##         From     Trough         To   Depth Length To Trough Recovery
## 1 2015-08-10 2015-12-10 2017-01-23 -0.0793    367        87      280
## 2 2018-12-13 2018-12-31 2019-01-08 -0.0612     17        12        5
## 3 2018-05-25 2018-07-17 2018-08-06 -0.0543     50        36       14
## 4 2017-01-24 2017-03-09 2018-01-26 -0.0520    255        32      223
## 5 2018-02-26 2018-02-27 2018-04-11 -0.0343     32         2       30&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Downside risk&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;res$ds_risk&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                                   pnl
## Semi Deviation                 0.0030
## Gain Deviation                 0.0050
## Loss Deviation                 0.0041
## Downside Deviation (MAR=210%)  0.0092
## Downside Deviation (Rf=0%)     0.0029
## Downside Deviation (0%)        0.0029
## Maximum Drawdown               0.0793
## Historical VaR (95%)          -0.0066
## Historical ES (95%)           -0.0106
## Modified VaR (95%)            -0.0039
## Modified ES (95%)             -0.0039&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Returns&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;res$ret&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                              pnl
## Annualized Return         0.0473
## Annualized Std Dev        0.0717
## Annualized Sharpe (Rf=0%) 0.6601&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;re the returns (XIRR) for my CPFIS Portfolio</title>
      <link>/project/xirr_cpf/</link>
      <pubDate>Sat, 23 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/project/xirr_cpf/</guid>
      <description>


&lt;div id=&#34;whatre-the-returns-xirr-for-my-cpfis-portfolio&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;What’re the returns (XIRR) for my CPFIS Portfolio?&lt;/h2&gt;
&lt;p&gt;I expounded my philosophy and calculated the returns of my CPFIS portfolio via XIRR (Extended Internal Rate of Returns) &lt;a href=&#34;https://jironghuang.github.io/post/xirr_cpfis/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The binary lens of evaluating the XIRR is as follows,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If XIRR &amp;gt; 2.5%, my investment decision paid off&lt;/li&gt;
&lt;li&gt;Else if XIRR &amp;lt; 2.5%, my invesment decision did not pay off (not to say it’s a bad decision. Pls do not confuse decision with outcome)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As an ex-economist/ data geek who doesn’t shy away from having skin in the game, I will be honest in sharing my returns and its stream of cashflow here,&lt;/p&gt;
&lt;iframe src=&#34;https://docs.google.com/spreadsheets/d/e/2PACX-1vQtSJfzakpUWRkryIoXaqJm7szd-g6R1SHr-aAXAlHNOFEDXYGhCBNC9UeYEYv8cYf8krgsS6LPpED9/pubhtml?gid=267342954&amp;amp;single=true&amp;amp;widget=true&amp;amp;headers=false&#34; width=&#34;1000&#34; height=&#34;780&#34; style=&#34;border: none;&#34;&gt;
&lt;/iframe&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>What&#39;re the returns (XIRR) for my CPFIS Portfolio</title>
      <link>/post/xirr_cpfis/</link>
      <pubDate>Sat, 16 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/xirr_cpfis/</guid>
      <description>


&lt;div id=&#34;whatre-the-returns-xirr-for-my-cpfis-portfolio&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;What’re the returns (XIRR) for my CPFIS Portfolio?&lt;/h2&gt;
&lt;p&gt;Every employee in Singapore is bounded by the same set of CPF rules.&lt;/p&gt;
&lt;p&gt;As an ex-economist/ data geek who doesn’t shy away from having skin in the game. I asked myself this question back in 2015 when I was still a starry-eyed young man 2 years into the workforce - how do I set out to optimize my returns in my CPF OA with these given set of constraints,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You cannot withdraw your CPF OA till you are 55 years old&lt;/li&gt;
&lt;li&gt;You can only invest CPF OA beyond 20k&lt;/li&gt;
&lt;li&gt;And of this delta, you can only invest 35% in non ETFs instruments OR 100% of it in ETFs&lt;/li&gt;
&lt;li&gt;CPF OA returns of 2.5% per annum&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The last point is something that I wish to highlight. If I choose to invest, I would have to overcome the 2.5% hurdle rate from CPF OA.&lt;/p&gt;
&lt;p&gt;Subscribing to Vanguard’s philosophy, a pioneeer &amp;amp; leader in the space of index funds - (&lt;a href=&#34;https://personal.vanguard.com/pdf/s315.pdf&#34; class=&#34;uri&#34;&gt;https://personal.vanguard.com/pdf/s315.pdf&lt;/a&gt;) at least for my CPFIS portion, they advocate that lump sum investing proves to be superior than spacing out your investments (dollar cost averaging).&lt;/p&gt;
&lt;p&gt;Since then - whenever I have 5-6k in my CPF OA beyond the 20k, I promptly allocated it to the market. In some periods, I invested with smaller amounts when POEMS brokerage offered some promotions on commission fees.&lt;/p&gt;
&lt;div id=&#34;how-did-this-strategy-fare-thus-far&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;How did this strategy fare thus far?&lt;/h3&gt;
&lt;p&gt;XIRR- a metric used in assessing rate of returns with a given set of cashflows - came up to be around 5.7%! Note: This figure here accounts for the dividends received over the years.&lt;/p&gt;
&lt;p&gt;Hurray! It’s more than twice the 2.5% hurdle rate in CPF OA. And even the 4% rate from SA. One could voluntarily transfer OA to SA, but you will lose the flexibility of using the OA for serving mortage in future&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;my-thoughts&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;My thoughts&lt;/h3&gt;
&lt;p&gt;This is still an ongoing experiment in my ‘lab’. Apparently it seems to be working well! Going forward, I will continue this strategy.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;if-you-are-keen-in-the-technicalities-of-computing-xirr-applied-the-function-developed-by-someone-else-here-httpsgithub.comsunilveeravallixirr&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;If you are keen in the technicalities of computing XIRR (applied the function developed by someone else here –&amp;gt;#&lt;a href=&#34;https://github.com/SunilVeeravalli/xirr&#34; class=&#34;uri&#34;&gt;https://github.com/SunilVeeravalli/xirr&lt;/a&gt;)…&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;suppressMessages(source(&amp;quot;./CPFOA/F_xirr.R&amp;quot;))
suppressMessages(source(&amp;quot;./CPFOA/another_irr_eg.R&amp;quot;))
suppressPackageStartupMessages(library(tvm))

#Reading my dataset
cpf_contrib &amp;lt;- read_csv(file = &amp;quot;./CPFOA/jr_cpfis_contrib.csv&amp;quot;, col_names = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Parsed with column specification:
## cols(
##   Date = col_character(),
##   num_stocks_cpf_port = col_double(),
##   sti_px = col_double(),
##   cpf_oa_port_val = col_double(),
##   Dividends_per_share = col_double()
## )&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Formattting date
cpf_contrib$Date = as.Date(cpf_contrib$Date, format = &amp;quot;%m/%d/%y&amp;quot;)
names(cpf_contrib)[which(names(cpf_contrib) == &amp;quot;Date&amp;quot;)] = &amp;quot;dates&amp;quot; 

#including ss
cpf_contrib$net_stocks_purchase = lead(cpf_contrib$num_stocks_cpf_port - lag(cpf_contrib$num_stocks_cpf_port))

#Contributions
cpf_contrib$stock_amt_purchase = cpf_contrib$net_stocks_purchase * cpf_contrib$sti_px

#Dividends amount
cpf_contrib$dividends = cpf_contrib$num_stocks_cpf_port * cpf_contrib$Dividends_per_share 
cpf_contrib$dividends = ifelse(is.na(cpf_contrib$dividends), 0, cpf_contrib$dividends)

#Net cashflow
cpf_contrib = cpf_contrib %&amp;gt;%
                mutate(net_cash_flow = dividends - stock_amt_purchase)

#Setting final cashflow  
cpf_contrib$net_cash_flow[nrow(cpf_contrib)] = cpf_contrib$cpf_oa_port_val[nrow(cpf_contrib)]

#Computing the xirr
xirr(cpf_contrib[, c(&amp;quot;dates&amp;quot;,&amp;quot;net_cash_flow&amp;quot;)])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;XIRR is 5.775%&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;print(xirr2(cpf_contrib$net_cash_flow, cpf_contrib$dates))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0.05777714&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;final-dataset-on-dividends-purchases-cashflows-portfolio-values&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Final dataset on dividends, purchases, cashflows, portfolio values&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;suppressPackageStartupMessages(library(knitr))
suppressPackageStartupMessages(library(kableExtra))

kable(cpf_contrib, caption = &amp;quot;Final data-frame of dividends, purchase, cashflows, portfolio values&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:unnamed-chunk-2&#34;&gt;Table 1: &lt;/span&gt;Final data-frame of dividends, purchase, cashflows, portfolio values
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
dates
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
num_stocks_cpf_port
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
sti_px
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
cpf_oa_port_val
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
Dividends_per_share
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
net_stocks_purchase
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
stock_amt_purchase
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
dividends
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
net_cash_flow
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2015-05-01
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.350
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1800
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6030.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-6030.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2015-06-01
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1800
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.240
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5562
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3240.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-3240.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2015-07-15
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2800
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.970
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8372
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.049
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2970.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
137.2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-2832.8
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2015-08-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3800
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.850
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10564
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5700.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-5700.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2015-09-13
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5800
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.040
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
15486
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2015-10-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5800
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.920
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16530
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2015-11-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5800
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.950
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
15892
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2950.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-2950.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2015-12-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6800
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.630
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
18768
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2016-01-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6800
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.690
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16728
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
700
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1883.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-1883.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2016-02-03
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.860
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
19275
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.107
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
400
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1144.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
802.5
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-341.5
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2016-03-21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7900
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.870
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
21567
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
400
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1148.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-1148.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2016-04-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8300
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.840
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
22742
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
900
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2556.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-2556.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2016-05-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9200
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.880
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
24932
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
600
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1728.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-1728.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2016-06-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
9800
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.880
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
26950
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
400
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1152.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-1152.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2016-07-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10200
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.860
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
28050
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
400
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1144.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-1144.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2016-08-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10600
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.910
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
29362
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.084
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2910.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
890.4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-2019.6
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2016-09-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
11600
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.860
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
32712
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
700
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2002.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-2002.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2016-10-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12300
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.950
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
34071
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2016-11-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12300
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2.940
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
35178
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2016-12-09
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12300
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.110
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
35055
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2017-01-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12300
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.100
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
37023
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1600
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4960.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-4960.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2017-02-25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13900
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.190
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
41700
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.053
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
600
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1914.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
736.7
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-1177.3
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2017-03-25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
14500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.200
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
45530
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
800
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2560.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-2560.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2017-04-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
15300
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.260
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
48195
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2017-05-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
15300
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.270
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
49113
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2017-06-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
15300
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.320
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
49266
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
800
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2656.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-2656.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2017-07-21
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16100
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.320
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
52647
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.048
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
772.8
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
772.8
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2017-08-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16100
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.250
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
53452
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
400
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1300.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-1300.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2017-09-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
16500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.420
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
53625
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1100
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3762.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-3762.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2017-10-25
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
17600
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.480
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60192
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2017-11-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
17600
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.450
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
61072
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2017-12-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
17600
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.580
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60544
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-01-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
17600
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.520
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
64416
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-02-22
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
17600
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.430
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
61952
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.053
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
932.8
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
932.8
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-03-23
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
17600
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.637
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60368
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-04-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
17600
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.500
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
63184
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-05-17
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
17600
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.321
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
63008
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-06-24
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
17600
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.388
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
58960
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-07-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
17600
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.251
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
58432
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-08-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
17600
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.299
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
58080
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.060
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1700
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5608.3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1056.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-4552.3
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-09-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
19300
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.061
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60795
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-10-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
19300
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.156
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60216
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1300
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4102.8
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-4102.8
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-11-10
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20600
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.100
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
64272
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2018-12-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20600
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.247
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
63860
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2019-01-11
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20600
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.218
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
67362
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2019-02-19
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20600
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.191
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
66332
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.056
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2000
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6382.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1153.6
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
-5228.4
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
2019-03-12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
22600
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3.210
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
72388
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
72388.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Rolling out the Investment Compass interactive app that I promised eons ago</title>
      <link>/post/rolling-out-the-investment-compass-interactive-app-that-i-promised-to-myself-eons-ago/</link>
      <pubDate>Sun, 05 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/rolling-out-the-investment-compass-interactive-app-that-i-promised-to-myself-eons-ago/</guid>
      <description>&lt;p&gt;Finally I had some time to sit down to work on the interactive app. From what was an hideous app to a somewhat Minimum Viable Product (MVP) version of an app. (Shhh&amp;hellip;I&amp;rsquo;m not really a User Interface, UI person).&lt;/p&gt;

&lt;p&gt;This serves as a compass for me to visualize the potential returns given the % fall from 52 week high. See my linkedin article &lt;a href=&#34;https://www.linkedin.com/pulse/investment-compass-our-volatile-times-jirong-huang/&#34;&gt;here&lt;/a&gt; for further explanation on why I think this is a good indicator.&lt;/p&gt;

&lt;p&gt;The app consists of 3 tabs. The &amp;lsquo;Visualize&amp;rsquo; tab contains 3 graphs plotting % fall from 52 week high against the expected returns 1 to 3 years later. And the value boxes are simply the fitted values from the best fit lines.&lt;/p&gt;

&lt;p&gt;The second tab contains the description of the indexes. For eg. ^STI refers to Straits Times Index. It will be useful for selection of the Index under Visualization tab.&lt;/p&gt;

&lt;p&gt;The third tab is just a summary of the Linkedin article.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re interested in reading the codes, pls visit my github &lt;a href=&#34;https://github.com/jironghuang/investment_compass&#34;&gt;link&lt;/a&gt;. At the moment, the lagging of indicators are done in a grossly inefficient way because I was just cobbling together some codes I did in the past. Will optimize it by using parallelized functions like mclapply in the future (used for crawling the stock process but not the computation).&lt;/p&gt;

&lt;iframe src=&#34;https://sef88.shinyapps.io/investment_compass/&#34; width=&#34;1200&#34; height=&#34;1500&#34; style=&#34;border: none;&#34;&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Updated ETF project codes</title>
      <link>/post/etf_watchlist_project/</link>
      <pubDate>Sat, 07 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/etf_watchlist_project/</guid>
      <description>


&lt;div id=&#34;updated-etf-watchlist-project&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Updated ETF watchlist project&lt;/h2&gt;
&lt;p&gt;While watching a world cup match today, I updated my ETF watchlist project (you may click &lt;a href=&#34;/project/watch_list&#34;&gt;here&lt;/a&gt; if you haven’t seen it yet)&lt;/p&gt;
&lt;p&gt;You may find the github code &lt;a href=&#34;https://github.com/jironghuang/ETF_watchlist&#34;&gt;here&lt;/a&gt;. In the revision, I parallelized the crawling - essentially tapping on all the cores in my machines.&lt;/p&gt;
&lt;p&gt;To create your own watchlist. Follow these steps,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install R and R studio.&lt;/li&gt;
&lt;li&gt;In Mac or Linux, type the following in command line git clone &lt;a href=&#34;https://github.com/jironghuang/ETF_watchlist&#34; class=&#34;uri&#34;&gt;https://github.com/jironghuang/ETF_watchlist&lt;/a&gt; . In windows, you may visit the link and download it as zipped folder&lt;/li&gt;
&lt;li&gt;Open the .Rproj&lt;/li&gt;
&lt;li&gt;Tweak the input file to change your watchlist. Ticker symbol should follow yahoo ticker naming convention (e.g. VWRD.L for the ETF listed on stock exchange)&lt;/li&gt;
&lt;li&gt;Ctrl + A and Ctrl + Enter. Or just click the run button in the top right hand of Rstudio&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note: For the auth.r section, you may comment it out if you do not wish to upload the crawled data in googlesheet.&lt;/p&gt;
&lt;iframe src=&#34;https://docs.google.com/spreadsheets/d/e/2PACX-1vQtSJfzakpUWRkryIoXaqJm7szd-g6R1SHr-aAXAlHNOFEDXYGhCBNC9UeYEYv8cYf8krgsS6LPpED9/pubhtml?gid=0&amp;amp;single=true&#34; width=&#34;900&#34; height=&#34;780&#34; style=&#34;border: none;&#34;&gt;
&lt;/iframe&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Updated ETF Watchlist Codes</title>
      <link>/post/updated-etf-watchlist-codes/</link>
      <pubDate>Sat, 07 Jul 2018 01:37:53 +0800</pubDate>
      
      <guid>/post/updated-etf-watchlist-codes/</guid>
      <description>

&lt;h2 id=&#34;updated-etf-watchlist-project&#34;&gt;Updated ETF watchlist project&lt;/h2&gt;

&lt;p&gt;While watching a world cup match today, I updated my ETF watchlist project (you may click &lt;a href=&#34;/project/watch_list&#34;&gt;here&lt;/a&gt; if you haven&amp;rsquo;t seen it yet)&lt;/p&gt;

&lt;p&gt;You may find the github code &lt;a href=&#34;https://github.com/jironghuang/ETF_watchlist&#34;&gt;here&lt;/a&gt;. In the revision, I parallelized the crawling - essentially tapping on all the cores in my machines.&lt;/p&gt;

&lt;p&gt;To create your own watchlist. Follow these steps,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Install R and R studio.&lt;/li&gt;
&lt;li&gt;In Mac or Linux, type the following in command line git clone &lt;a href=&#34;https://github.com/jironghuang/ETF_watchlist&#34; target=&#34;_blank&#34;&gt;https://github.com/jironghuang/ETF_watchlist&lt;/a&gt; . In windows, you may visit the link and download it as zipped folder&lt;/li&gt;
&lt;li&gt;Open the .Rproj&lt;/li&gt;
&lt;li&gt;Tweak the input file to change your watchlist. Ticker symbol should follow yahoo ticker naming convention (e.g. VWRD.L for the ETF listed on stock exchange)&lt;/li&gt;
&lt;li&gt;Ctrl + A and Ctrl + Enter. Or just click the run button in the top right hand of Rstudio&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note: For the auth.r section, you may comment it out if you do not wish to upload the crawled data in googlesheet.&lt;/p&gt;

&lt;iframe src=&#34;https://docs.google.com/spreadsheets/d/e/2PACX-1vQtSJfzakpUWRkryIoXaqJm7szd-g6R1SHr-aAXAlHNOFEDXYGhCBNC9UeYEYv8cYf8krgsS6LPpED9/pubhtml?gid=0&amp;single=true&#34; width=&#34;900&#34; height=&#34;780&#34; style=&#34;border: none;&#34;&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Analyzing Warren Buffett Cash Level</title>
      <link>/post/buffett/</link>
      <pubDate>Wed, 04 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/buffett/</guid>
      <description>


&lt;div id=&#34;warren-buffett-the-sage&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Warren Buffett the sage&lt;/h2&gt;
&lt;p&gt;It’s always interesting to understand investment gurus’ thought process. And one of the ways is to look at their companies’ balance sheet.&lt;/p&gt;
&lt;p&gt;Warren Buffett, the Sage &amp;amp; CEO of Berkshire, in recent decade has always been known to hoard cash. And before the 2008 crisis, he held cash level of 40-50% relative to its equity - probably trying to stay out of the overvalued market and waiting for the right opportunity to swoop in for a ‘BIG CATCH’. And his efforts (or no effort) paid off. He made huge bets on companies like Goldman Sachs when prices are really depressed. And he was rewarded handsomely.&lt;/p&gt;
&lt;p&gt;At the moment, his cash level ratios for both cash/equity &amp;amp; cash/asset are on the low side - suggesting that the markets aren’t overvalued. And he’s willing to stay invested in the market.&lt;/p&gt;
&lt;p&gt;That being said, there’re few factors in play,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;As your assets grows, it may be really hard to maintain a high proportion of cash since opportunity of holding cash is really high!&lt;/li&gt;
&lt;li&gt;Types of business will affect your appetite to hold cash. Insurance business, for instance requires more cash for payout during disasters and calamaties.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the near future, I will probably integrate quarterly earnings and display the charts as an interactive dashboard - hosting live on the cloud.&lt;/p&gt;
&lt;p&gt;PS:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Honestly, the time series here is a bit disjointed. But I guess it still yields some useful information.&lt;/li&gt;
&lt;li&gt;I painstakingly keyed in the numbers from gurufocus.com (can’t extract the numbers from the chart)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat = read.csv(&amp;quot;berkshire_fin_statement.csv&amp;quot;, stringsAsFactors = F)
dat$cash_over_asset = round(100 * (dat$cash / dat$asset),1)
dat$cash_over_equity = round(100 * (dat$cash / dat$equity), 1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(reshape2)
dat_long = melt(dat, id = c(&amp;quot;year&amp;quot;))
dat_long = subset(dat_long, dat_long$variable == &amp;quot;cash_over_asset&amp;quot; |
                    dat_long$variable == &amp;quot;cash_over_equity&amp;quot;)

ggplot(data = dat_long,
       aes(x = year, y = value, colour = variable)) +
       geom_line() + scale_x_continuous(breaks = seq(1990, 2017, 2)) +
       labs(x=&amp;quot;Year&amp;quot;,y=&amp;quot;Percentage&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/buffett_files/figure-html/unnamed-chunk-2-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>ETFs watchlist</title>
      <link>/project/watch_list/</link>
      <pubDate>Sun, 17 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/watch_list/</guid>
      <description>


&lt;div id=&#34;etfs-watchlist&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;ETFs watchlist&lt;/h2&gt;
&lt;p&gt;In my Ubunutu - Linux laptop, I wrote some R scripts to crawl the yahoo financial data. When the clock strikes midnight, my cronjob task scheduler will execute these scripts in a parallel fashion to extract the data.&lt;/p&gt;
&lt;p&gt;Then my script will log into my google account via SSH and paste the crawled data into 1 of the googlesheet tabs. And this is linked to my portfolio allocation, computation and milestones.&lt;/p&gt;
&lt;p&gt;It also serves as a watchlist for me to monitor which of these ETFs are undervalued via % fall from 52 week high. See my linkedin article &lt;a href=&#34;https://www.linkedin.com/pulse/investment-compass-our-volatile-times-jirong-huang/&#34;&gt;here&lt;/a&gt; for further explanation on why I think this is a good indicator.&lt;/p&gt;
&lt;p&gt;You may find my R scripts &lt;a href=&#34;https://github.com/jironghuang/ETF_watchlist&#34;&gt;here&lt;/a&gt;. I didn’t really document this repo well so do approach me if you’ve any questions.&lt;/p&gt;
&lt;p&gt;And here’s the googlesheet (updated daily) opened to the public. Hope you find it useful!&lt;/p&gt;
&lt;p&gt;Point to note: There seems to be some errors in the % 52 week high indicator for London Stock Exchange and Hong Kong Stock Exchange Stocks (i.e. .L and .HK tickers). So consume this information with a pinch of salt.&lt;/p&gt;
&lt;iframe src=&#34;https://docs.google.com/spreadsheets/d/e/2PACX-1vQtSJfzakpUWRkryIoXaqJm7szd-g6R1SHr-aAXAlHNOFEDXYGhCBNC9UeYEYv8cYf8krgsS6LPpED9/pubhtml?gid=362103953&amp;amp;single=true&#34; width=&#34;900&#34; height=&#34;780&#34; style=&#34;border: none;&#34;&gt;
&lt;/iframe&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Permanent Portfolio that I Implemented</title>
      <link>/project/perm_port_proj/</link>
      <pubDate>Wed, 04 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/project/perm_port_proj/</guid>
      <description>


&lt;!-- https://stackoverflow.com/questions/47371794/how-to-create-an-image-preview-for-a-post-in-hugo-academic-from-rmd --&gt;
&lt;div id=&#34;portfolio-performance-since-2-april-18&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Portfolio Performance since 2 April 18&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Include Google Sheet iframe link in future.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;an-all-weather-portfolio&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;An all weather portfolio&lt;/h2&gt;
&lt;p&gt;Note: I carried out a similar analysis as 1 of the posts I’ve written (&lt;a href=&#34;https://jirong-huang.netlify.com/post/perm_port/&#34; class=&#34;uri&#34;&gt;https://jirong-huang.netlify.com/post/perm_port/&lt;/a&gt;). The difference is that I considered 4 assets (including T-bills) instead of 3. The performance in the post is more reflective of stress-test perfromance (Sharpe, Drawdown Ratio, etc.)&lt;/p&gt;
&lt;p&gt;Based on the literature, permanent portfolio is an investment strategy that is able to yield moderate returns and relatively low volatility. Investor is recommended to invest equally (25%) into GLD, Index, Bond and Cash and rebalance it back to this proportion on regular intervals.&lt;/p&gt;
&lt;p&gt;This approach is something that I’m keen to adopt for a portion of my portfolio.&lt;/p&gt;
&lt;p&gt;To investigate the feasibility, I simulated a portfolio starting at $400 on 2009 (limited by complete series). Here’s the asset allocation proportion,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GLD: Gold&lt;/li&gt;
&lt;li&gt;TLT: 20 Years Treasury Bond&lt;/li&gt;
&lt;li&gt;VGSH: Vanguard Short Term Bond&lt;/li&gt;
&lt;li&gt;VTI: Total US stock&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I admit that the code that I wrote here is very procedural. If I’ve time, I’ll try to ‘functionalize’ the codes so that I could use it for other portfolio simulation purposes.&lt;/li&gt;
&lt;li&gt;The looping in the R vectorized setting is known to be super slow! If I really have time to spare, I’ll convert some of the loops to Rcpp (C++). But I highly doubt so since the data is not that huge at the moment (unless I venture into tick data. Oh well, who knows).&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;key-points&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Key points&lt;/h2&gt;
&lt;p&gt;On the annualized returns, it’s not really fantastic. But it still returns a respectable annualized performance of 5% (+ 2% dividends?)&lt;/p&gt;
&lt;p&gt;What stands out, however, are the following performance metrics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In terms of draw-down, it performed remarkably well relative to a Total US Stock portfolio. It suffered a loss of only 9% as compared to a huge loss of 20 + % in other assets; could be more if full Great Financial Crisis is included.&lt;/li&gt;
&lt;li&gt;On the Sharpe Ratio (annualized returns in excess of risk-free rate per unit of volatility), it’s considerably higher than other assets - albeit lower than Total Stock (in my other analysis with longer time period, it’s considerably higher).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Feel free to adapt or adopt the code. You can easily substitute the stocks based on your preferred asset allocation.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;setting-up-the-analysis.&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Setting up the analysis.&lt;/h2&gt;
&lt;p&gt;In this section, I downloaded stock data using quant mod. And merge the time series.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(quantmod)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: xts&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: zoo&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;zoo&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     as.Date, as.Date.numeric&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: TTR&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Version 0.4-0 included new data defaults. See ?getSymbols.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(PerformanceAnalytics)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;PerformanceAnalytics&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following object is masked from &amp;#39;package:graphics&amp;#39;:
## 
##     legend&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyr)
library(dplyr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;dplyr&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:xts&amp;#39;:
## 
##     first, last&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:stats&amp;#39;:
## 
##     filter, lag&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     intersect, setdiff, setequal, union&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tibble)

# Download data--&amp;gt;Fix the ending date for project section
ticker1 = &amp;quot;GLD&amp;quot;
stock1 = getSymbols(ticker1,from=&amp;quot;1900-01-01&amp;quot;,auto.assign=F)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;getSymbols&amp;#39; currently uses auto.assign=TRUE by default, but will
## use auto.assign=FALSE in 0.5-0. You will still be able to use
## &amp;#39;loadSymbols&amp;#39; to automatically load data. getOption(&amp;quot;getSymbols.env&amp;quot;)
## and getOption(&amp;quot;getSymbols.auto.assign&amp;quot;) will still be checked for
## alternate defaults.
## 
## This message is shown once per session and may be disabled by setting 
## options(&amp;quot;getSymbols.warning4.0&amp;quot;=FALSE). See ?getSymbols for details.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## WARNING: There have been significant changes to Yahoo Finance data.
## Please see the Warning section of &amp;#39;?getSymbols.yahoo&amp;#39; for details.
## 
## This message is shown once per session and may be disabled by setting
## options(&amp;quot;getSymbols.yahoo.warning&amp;quot;=FALSE).&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;names(stock1) = c(&amp;quot;open&amp;quot;,&amp;quot;high&amp;quot;,&amp;quot;low&amp;quot;,&amp;quot;close&amp;quot;,&amp;quot;volume&amp;quot;,&amp;quot;adj_close&amp;quot;)
stock1 = stock1[,6]

ticker2 = &amp;quot;TLT&amp;quot;
stock2 = getSymbols(ticker2,from=&amp;quot;1900-01-01&amp;quot;,auto.assign=F)
names(stock2) = c(&amp;quot;open&amp;quot;,&amp;quot;high&amp;quot;,&amp;quot;low&amp;quot;,&amp;quot;close&amp;quot;,&amp;quot;volume&amp;quot;,&amp;quot;adj_close&amp;quot;)
stock2 = stock2[,6]

ticker3 = &amp;quot;VGSH&amp;quot;
stock3 = getSymbols(ticker3,from=&amp;quot;1900-01-01&amp;quot;,auto.assign=F)
names(stock3) = c(&amp;quot;open&amp;quot;,&amp;quot;high&amp;quot;,&amp;quot;low&amp;quot;,&amp;quot;close&amp;quot;,&amp;quot;volume&amp;quot;,&amp;quot;adj_close&amp;quot;)
stock3 = stock3[,6]

ticker4 = &amp;quot;VTI&amp;quot;
stock4 = getSymbols(ticker4,from=&amp;quot;1900-01-01&amp;quot;,auto.assign=F)
names(stock4) = c(&amp;quot;open&amp;quot;,&amp;quot;high&amp;quot;,&amp;quot;low&amp;quot;,&amp;quot;close&amp;quot;,&amp;quot;volume&amp;quot;,&amp;quot;adj_close&amp;quot;)
stock4 = stock4[,6]

# Merge the time series and subset NA
#These are the various time series
ticker_list = c(&amp;quot;stock1&amp;quot;,&amp;quot;stock2&amp;quot;,&amp;quot;stock3&amp;quot;,&amp;quot;stock4&amp;quot;)

#read in list. Loop through and assign variable to holder variable. Then assign it to combined list
ticker_all = get(ticker_list[1])  

#Merging in the time series
for(i in 2:length(ticker_list)){
  ticker_ind = get(ticker_list[i])
  ticker_all = merge(ticker_all,ticker_ind)  
}

names(ticker_all) = c(&amp;quot;stock1&amp;quot;,&amp;quot;stock2&amp;quot;,&amp;quot;stock3&amp;quot;,&amp;quot;stock4&amp;quot;)

ticker_all = subset(ticker_all,!is.na(ticker_all$stock1) &amp;amp; !is.na(ticker_all$stock2) &amp;amp; !is.na(ticker_all$stock3) &amp;amp; !is.na(ticker_all$stock4))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;running-the-simulation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Running the simulation&lt;/h2&gt;
&lt;p&gt;Next, I run the simulation - By intialising 25% asset allocation in each of the asset and rebalance at the end of each year. Daily portfolio returns are then obtained throught the ROC function.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Assign equal weights to each stream of returns
ticker_all = cbind(ticker_all,rowMeans(ticker_all))
ticker_all = subset(ticker_all,!is.na(ticker_all[,4]))
ticker_all = ticker_all[,-ncol(ticker_all)]

#Identify the period of rebalancing. Show the indexes
rebal_index = data.frame(index = endpoints(ticker_all,on=&amp;quot;years&amp;quot;)[-1])
# endpoints(ticker_all,on=&amp;quot;quarters&amp;quot;) 

#Merge in the indicator into ticker_all--Can&amp;#39;t seem to merge. Will do the inefficient loop
# merge(ticker_all,rebal_index, by = &amp;quot;index&amp;quot;, all = T)
ticker_all$rebal = NA
for(i in 1:nrow(rebal_index)){
  ticker_all$rebal[rebal_index$index[i]] = 1
}

ticker_all$rebal = ifelse(is.na(ticker_all$rebal),0,ticker_all$rebal)

#Create the returns for each price series
ticker_all$ret1 = ROC(ticker_all[,1])
ticker_all$ret2 = ROC(ticker_all[,2])
ticker_all$ret3 = ROC(ticker_all[,3])
ticker_all$ret4 = ROC(ticker_all[,4])

#Initialise value for each stock series, with a total portfolio value
ticker_all$val1 = NA; ticker_all$val1[1] = 100
ticker_all$val2 = NA; ticker_all$val2[1] = 100
ticker_all$val3 = NA; ticker_all$val3[1] = 100
ticker_all$val4 = NA; ticker_all$val4[1] = 100

ticker_all$portfolio_val = NA
ticker_all$portfolio_val[1] = rowSums(ticker_all[1,which(names(ticker_all) == &amp;quot;val1&amp;quot;):which(names(ticker_all) == &amp;quot;val4&amp;quot;)])



#Loop each row and &amp;#39;compound&amp;#39;. Till it reaches the rebalancing date. Then reset stock value amount in that day. Take the portfolio value in t-1
for(i in 2:nrow(ticker_all)){
  
  if(as.numeric(ticker_all$rebal[i]) == 0){
    
  #During non-rebalancing days
  ticker_all$val1[i] = as.numeric(ticker_all$val1[i-1]) * (1 + as.numeric(ticker_all$ret1[i]))
  ticker_all$val2[i] = as.numeric(ticker_all$val2[i-1]) * (1 + as.numeric(ticker_all$ret2[i]))
  ticker_all$val3[i] = as.numeric(ticker_all$val3[i-1]) * (1 + as.numeric(ticker_all$ret3[i]))
  ticker_all$val4[i] = as.numeric(ticker_all$val4[i-1]) * (1 + as.numeric(ticker_all$ret4[i]))

  ticker_all$portfolio_val[i] = rowSums(ticker_all[i,which(names(ticker_all) == &amp;quot;val1&amp;quot;):which(names(ticker_all) == &amp;quot;val4&amp;quot;)])
  
  }else{
  #During re-balancing days
  ticker_all$val1[i] = ticker_all$portfolio_val[i-1] / 4
  ticker_all$val2[i] = ticker_all$portfolio_val[i-1] / 4
  ticker_all$val3[i] = ticker_all$portfolio_val[i-1] / 4
  ticker_all$val4[i] = ticker_all$portfolio_val[i-1] / 4
  
  ticker_all$portfolio_val[i] = rowSums(ticker_all[i,which(names(ticker_all) == &amp;quot;val1&amp;quot;):which(names(ticker_all) == &amp;quot;val4&amp;quot;)])  
  } 
}

#Generate the daily portfolio returns
ticker_all$portfolio_ret = ROC(ticker_all$portfolio_val)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;portfolio-performance-for-the-entire-period&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Portfolio Performance for the entire period&lt;/h2&gt;
&lt;p&gt;On the annualized returns, it’s not really fantastic. But it still returns a respectable annualized performance of 5% (+ 2% dividends?)&lt;/p&gt;
&lt;p&gt;What stands out, however, are the following performance metrics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In terms of draw-down, it performed remarkably well relative to a GOLD &amp;amp; Total US Stock portfolio. It suffered a loss of only 9% as compared to a loss of 20+ % in other assets; could’ve be more if full Great Financial Crisis is included (in my post analysis, it could go up to 60% if Great Financial Crisis is included).&lt;/li&gt;
&lt;li&gt;On the Sharpe Ratio (annualized returns in excess of risk-free rate per unit of volatility), it’s considerably higher than other assets - albeit lower than Total Stock (in my other analysis with longer time period, it’s considerably higher).&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;######################################Study the portfolio returns########################################
#Carry out the portfolio return series
table.Drawdowns(ticker_all$portfolio_ret, top=10)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##          From     Trough         To   Depth Length To Trough Recovery
## 1  2012-10-05 2013-06-26 2014-06-19 -0.0882    427       180      247
## 2  2016-07-11 2016-12-15 2017-08-30 -0.0828    289       112      177
## 3  2015-01-26 2016-01-14 2016-06-08 -0.0804    346       246      100
## 4  2009-12-03 2010-02-10 2010-04-14 -0.0471     90        47       43
## 5  2018-01-29 2018-02-08       &amp;lt;NA&amp;gt; -0.0415     46         9       NA
## 6  2011-09-07 2011-09-28 2011-11-03 -0.0409     42        16       26
## 7  2012-02-29 2012-05-16 2012-08-24 -0.0391    125        55       70
## 8  2011-11-08 2011-12-15 2012-01-27 -0.0368     55        27       28
## 9  2010-11-09 2010-11-17 2011-02-28 -0.0317     76         7       69
## 10 2014-09-02 2014-09-17 2014-12-09 -0.0274     70        12       58&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table.DownsideRisk(merge(ticker_all$portfolio_ret, ticker_all$ret1, ticker_all$ret2, ticker_all$ret3, ticker_all$ret4))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                               portfolio_ret    ret1    ret2    ret3
## Semi Deviation                       0.0029  0.0077  0.0065  0.0005
## Gain Deviation                       0.0023  0.0066  0.0056  0.0004
## Loss Deviation                       0.0028  0.0079  0.0060  0.0004
## Downside Deviation (MAR=210%)        0.0090  0.0128  0.0117  0.0083
## Downside Deviation (Rf=0%)           0.0028  0.0076  0.0064  0.0004
## Downside Deviation (0%)              0.0028  0.0076  0.0064  0.0004
## Maximum Drawdown                     0.0882  0.4922  0.2147  0.0106
## Historical VaR (95%)                -0.0062 -0.0169 -0.0146 -0.0010
## Historical ES (95%)                 -0.0090 -0.0253 -0.0193 -0.0014
## Modified VaR (95%)                  -0.0064 -0.0177 -0.0146 -0.0010
## Modified ES (95%)                   -0.0108 -0.0342 -0.0210 -0.0015
##                                  ret4
## Semi Deviation                 0.0071
## Gain Deviation                 0.0062
## Loss Deviation                 0.0077
## Downside Deviation (MAR=210%)  0.0119
## Downside Deviation (Rf=0%)     0.0069
## Downside Deviation (0%)        0.0069
## Maximum Drawdown               0.2169
## Historical VaR (95%)          -0.0158
## Historical ES (95%)           -0.0237
## Modified VaR (95%)            -0.0158
## Modified ES (95%)             -0.0294&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;table.AnnualizedReturns(merge(ticker_all$portfolio_ret, ticker_all$ret1, ticker_all$ret2, ticker_all$ret3, ticker_all$ret4))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                           portfolio_ret    ret1   ret2   ret3   ret4
## Annualized Return                0.0469 -0.0017 0.0500 0.0069 0.1206
## Annualized Std Dev               0.0611  0.1651 0.1427 0.0101 0.1519
## Annualized Sharpe (Rf=0%)        0.7674 -0.0103 0.3503 0.6756 0.7937&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;charts.PerformanceSummary(merge(ticker_all$portfolio_ret, ticker_all$ret1, ticker_all$ret2, ticker_all$ret3, ticker_all$ret4))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/perm_port_proj_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;yearly-portfolio-performance&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Yearly Portfolio Performance&lt;/h2&gt;
&lt;p&gt;I also tabulated the yearly metrics of the portfolio to give a sense of the performance over years.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#####################################Study the annualized portfolio returns series#######################
#Use the rebal-indicator. Loop through the chunks
# https://www.quantmod.com/documentation/periodReturn.html
# https://rpubs.com/mohammadshadan/288218
# yearly_ret = periodReturn(ticker_all$portfolio_val
#              ,period=&amp;#39;yearly&amp;#39;,subset=&amp;#39;2004::&amp;#39;)  # returns years 2003 to present

yearly_ret = periodReturn(ticker_all$portfolio_val
                          ,period=&amp;#39;yearly&amp;#39;)  # returns years 2003 to present

#Inefficient way to calulate standard deviation. If it&amp;#39;ve time, I will probably optimize this
split_val = split(ticker_all$portfolio_ret, f = &amp;quot;years&amp;quot;)
yearly_ret$annual_sd = sapply(X = split_val, FUN = StdDev) * sqrt(252)


getSymbols(&amp;#39;DGS3MO&amp;#39;,src = &amp;#39;FRED&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;DGS3MO&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rf = DGS3MO; rm(DGS3MO)
rf = rf[&amp;quot;2009/2018&amp;quot;] 

split_val_rf = split(rf$DGS3MO, f = &amp;quot;years&amp;quot;)
yearly_ret$annual_rf = sapply(X = split_val_rf, FUN = mean, na.rm = T)/100 

yearly_ret$Sharpe = (yearly_ret$yearly.returns - yearly_ret$annual_rf)/yearly_ret$annual_sd  

yearly_ret&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##            yearly.returns  annual_sd    annual_rf     Sharpe
## 2009-12-31    -0.02143548 0.07391424 0.0015092000 -0.3104230
## 2010-12-31     0.12503869 0.06925292 0.0013844622  1.7855452
## 2011-12-30     0.09201080 0.07228724 0.0005284000  1.2655400
## 2012-12-31     0.05353343 0.05504939 0.0008760000  0.9565489
## 2013-12-31    -0.02919578 0.06965068 0.0005708000 -0.4273696
## 2014-12-31     0.09449067 0.04879063 0.0003272000  1.9299499
## 2015-12-31    -0.03608942 0.06101808 0.0005250996 -0.6000601
## 2016-12-30     0.05106338 0.06221028 0.0031936000  0.7694834
## 2017-12-29     0.10340429 0.04264321 0.0094896000  2.2023362
## 2018-04-03    -0.01057814 0.06051025 0.0158516129 -0.4367815&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(yearly_ret$yearly.returns)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/perm_port_proj_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;plot(yearly_ret$Sharpe)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/project/perm_port_proj_files/figure-html/unnamed-chunk-4-2.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Investigating Faber Sector Rotation Strategy</title>
      <link>/post/sector_rotation/</link>
      <pubDate>Tue, 03 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/sector_rotation/</guid>
      <description>


&lt;div id=&#34;does-sector-rotation---momentum-strategy-work&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Does sector rotation - momentum strategy work?&lt;/h2&gt;
&lt;p&gt;Faber sector rotation strategy is touted as a superior Tactical Asset Allocation strategy that could generate positive Alpha. This is evident in the post here &lt;a href=&#34;http://stockcharts.com/school/doku.php?id=chart_school:trading_strategies:sector_rotation_roc&#34; class=&#34;uri&#34;&gt;http://stockcharts.com/school/doku.php?id=chart_school:trading_strategies:sector_rotation_roc&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The strategy is pretty simple. Here is how it works,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;First, you choose 9 sectors&lt;/li&gt;
&lt;li&gt;Second, compute the 6 month returns&lt;/li&gt;
&lt;li&gt;Third, you only ‘trade’ once a month. For simiplicity I choose end of the month&lt;/li&gt;
&lt;li&gt;Fourth, you invest in 3 sectors with the highest past 6 month returns. If SnP 500 falls below its 200 day moving average, you do not invest at all.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I was really interested to adopt this strategy! But my hopes were crushed when I did my independent investigation. The returns were bad. And that’s even before adding in commission fees!&lt;/p&gt;
&lt;p&gt;I’m unsure why - but I can’t seem to replicate the performance in various articles and the original academic paper.&lt;/p&gt;
&lt;p&gt;There may be some careless mistakes in my computation. But allow me to lay out my full analysis.&lt;/p&gt;
&lt;p&gt;Updates: There’re indeed careless mistakes; will update the analysis and assess the performance in a more robust manner.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;setting-up-the-analysis-by-loading-in-packages-and-downloading-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Setting up the analysis by loading in packages and downloading data&lt;/h2&gt;
&lt;p&gt;I first download 9 sectors’ + Snp 500 worth of data&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Looking into Faber Investment Strategy

library(quantmod)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: xts&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: zoo&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## Attaching package: &amp;#39;zoo&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## The following objects are masked from &amp;#39;package:base&amp;#39;:
## 
##     as.Date, as.Date.numeric&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: TTR&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Version 0.4-0 included new data defaults. See ?getSymbols.&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(TTR)

## ------------------------------------------------------------------------
symbols = c(&amp;quot;XLF&amp;quot;, &amp;quot;XLP&amp;quot;, &amp;quot;XLE&amp;quot;, &amp;quot;XLY&amp;quot;, &amp;quot;XLV&amp;quot;, &amp;quot;XLI&amp;quot;, &amp;quot;XLB&amp;quot;, &amp;quot;XLK&amp;quot;, &amp;quot;XLU&amp;quot;)

startDate &amp;lt;- &amp;#39;1998-01-01&amp;#39;
endDate &amp;lt;-  &amp;#39;2018-04-03&amp;#39;
getSymbols(symbols, src=&amp;#39;yahoo&amp;#39;, index.class=c(&amp;quot;POSIXt&amp;quot;,&amp;quot;POSIXct&amp;quot;), from=startDate, to=endDate, adjust=T)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## &amp;#39;getSymbols&amp;#39; currently uses auto.assign=TRUE by default, but will
## use auto.assign=FALSE in 0.5-0. You will still be able to use
## &amp;#39;loadSymbols&amp;#39; to automatically load data. getOption(&amp;quot;getSymbols.env&amp;quot;)
## and getOption(&amp;quot;getSymbols.auto.assign&amp;quot;) will still be checked for
## alternate defaults.
## 
## This message is shown once per session and may be disabled by setting 
## options(&amp;quot;getSymbols.warning4.0&amp;quot;=FALSE). See ?getSymbols for details.&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## 
## WARNING: There have been significant changes to Yahoo Finance data.
## Please see the Warning section of &amp;#39;?getSymbols.yahoo&amp;#39; for details.
## 
## This message is shown once per session and may be disabled by setting
## options(&amp;quot;getSymbols.yahoo.warning&amp;quot;=FALSE).&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## pausing 1 second between requests for more than 5 symbols
## pausing 1 second between requests for more than 5 symbols
## pausing 1 second between requests for more than 5 symbols
## pausing 1 second between requests for more than 5 symbols
## pausing 1 second between requests for more than 5 symbols&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;XLF&amp;quot; &amp;quot;XLP&amp;quot; &amp;quot;XLE&amp;quot; &amp;quot;XLY&amp;quot; &amp;quot;XLV&amp;quot; &amp;quot;XLI&amp;quot; &amp;quot;XLB&amp;quot; &amp;quot;XLK&amp;quot; &amp;quot;XLU&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat = merge(XLF[,6],XLP[,6],XLE[,6],XLY[,6],XLV[,6],XLI[,6],XLB[,6],XLK[,6],XLU[,6])
names(dat) = c(&amp;quot;XLF&amp;quot;, &amp;quot;XLP&amp;quot;, &amp;quot;XLE&amp;quot;, &amp;quot;XLY&amp;quot;, &amp;quot;XLV&amp;quot;, &amp;quot;XLI&amp;quot;, &amp;quot;XLB&amp;quot;, &amp;quot;XLK&amp;quot;, &amp;quot;XLU&amp;quot;) 

getSymbols(&amp;quot;^GSPC&amp;quot;, src=&amp;#39;yahoo&amp;#39;, index.class=c(&amp;quot;POSIXt&amp;quot;,&amp;quot;POSIXct&amp;quot;), from=startDate, to=endDate, adjust=T)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;GSPC&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;GSPC = GSPC[,6]&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;pre-processing-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Pre-processing data&lt;/h2&gt;
&lt;p&gt;Here’s the workhorse of the program. I find the daily 6-month price change and also noted the monthly rebalancing index.&lt;/p&gt;
&lt;p&gt;For each day, I also looked at the 3 highest 6 month price-change so that on the end of the month rebalancing, I could easily pick these 3 sectors and place it in my simulation.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;GSPC$MA = SMA(GSPC[,1],200)
GSPC$more_MA = ifelse(GSPC[,1] &amp;gt; GSPC$MA,1,0)

#Lag all series by 6 months
lag_dat = dat
for(i in 1:ncol(dat)){
  lag_dat[,i] = Lag(dat[,i],252/2)
}


#And find the price change over 6 months
price_change = (dat - lag_dat)/lag_dat

#Rate of returns
ret = ROC(dat) 

#Denote if this month is a rebalancing month
rebal_index = data.frame(index = endpoints(dat,on=&amp;quot;months&amp;quot;)[-1])

#If yes, pick the 3 stocks--&amp;gt;Use DSI code to pick the highest returns column
#Function for positions of minimum and maximum
maxn &amp;lt;- function(n) function(x) order(x, decreasing = TRUE)[n]
minn &amp;lt;- function(n) function(x) order(x, decreasing = FALSE)[n]

#Super-imposed in column the return for that 3 stocks till next re-bal date
max_index = data.frame(max_1 = apply(price_change,1,maxn(1)),
                       max_2 = apply(price_change,1,maxn(2)),
                       max_3 = apply(price_change,1,maxn(3)))

# max_index[1:(252/2),] = NA
max_index[1:(200),] = NA

#add in 200 day-MA as filter--&amp;gt;Could be an option at the end to change all return values to 0

#Construct a data frame for portfolio simulation
portfolio_sim = dat

portfolio_sim$rebal = 0
portfolio_sim$rebal[1] = 1
portfolio_sim$rebal[2] = 1
# portfolio_sim$rebal[252/2 + 1] = 1
portfolio_sim$rebal[200 + 1] = 1

for(i in 1:nrow(rebal_index)){
  portfolio_sim$rebal[rebal_index$index[i]] = 1
}

#Portfolio simulation
portfolio_sim$max1_ticker = NA
portfolio_sim$max2_ticker = NA
portfolio_sim$max3_ticker = NA

portfolio_sim$max1_ret = 0
portfolio_sim$max2_ret = 0
portfolio_sim$max3_ret = 0

# portfolio_sim$max1_portfolio = 0; portfolio_sim$max1_portfolio[252/2] = 100
# portfolio_sim$max2_portfolio = 0; portfolio_sim$max2_portfolio[252/2] = 100
# portfolio_sim$max3_portfolio = 0; portfolio_sim$max3_portfolio[252/2] = 100
# portfolio_sim$tot_portfolio = 0; portfolio_sim$tot_portfolio[252/2] = 300

portfolio_sim$max1_portfolio = 0; portfolio_sim$max1_portfolio[200] = 100
portfolio_sim$max2_portfolio = 0; portfolio_sim$max2_portfolio[200] = 100
portfolio_sim$max3_portfolio = 0; portfolio_sim$max3_portfolio[200] = 100
portfolio_sim$tot_portfolio = 0; portfolio_sim$tot_portfolio[200] = 300&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;start-simulation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Start simulation&lt;/h2&gt;
&lt;p&gt;Moment of truth…I started my simulation - Picking 3 sectors with highest momentum; stick to it for the month. Rinse and repeat this process monthly.&lt;/p&gt;
&lt;p&gt;If SnP 500 dips below the 200 day average, I will liquidate any position for the month.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# start = 252/2 + 1
start = 200+ 1
for(i in start:nrow(portfolio_sim)){
  
  if(as.numeric(portfolio_sim$rebal[i]) == 1){
    
    #Include the ticker index
    portfolio_sim$max1_ticker[i] = max_index$max_1[i]
    portfolio_sim$max2_ticker[i] = max_index$max_2[i]
    portfolio_sim$max3_ticker[i] = max_index$max_3[i]
    
    #Include the returns
    portfolio_sim$max1_ret[i] = ret[i,portfolio_sim$max1_ticker[i]]
    portfolio_sim$max2_ret[i] = ret[i,portfolio_sim$max2_ticker[i]]
    portfolio_sim$max3_ret[i] = ret[i,portfolio_sim$max3_ticker[i]]

    #Calculate the portfolio
    portfolio_sim$max1_portfolio[i] = portfolio_sim$tot_portfolio[i-1]/3
    portfolio_sim$max2_portfolio[i] = portfolio_sim$tot_portfolio[i-1]/3 
    portfolio_sim$max3_portfolio[i] = portfolio_sim$tot_portfolio[i-1]/3
    portfolio_sim$tot_portfolio[i] = portfolio_sim$max1_portfolio[i] + portfolio_sim$max2_portfolio[i] + portfolio_sim$max3_portfolio[i] 
    
    #if less than 200 day-MA, change max1_ticker to 999
    if(as.numeric(GSPC$more_MA[i]) == 0){
      portfolio_sim$max1_ticker[i] = 999
      portfolio_sim$max2_ticker[i] = 999
      portfolio_sim$max3_ticker[i] = 999
    }
    
    # print(portfolio_sim$tot_portfolio[i])
    
  }else{
    portfolio_sim$max1_ticker[i] = portfolio_sim$max1_ticker[i-1]
    portfolio_sim$max2_ticker[i] = portfolio_sim$max2_ticker[i-1]
    portfolio_sim$max3_ticker[i] = portfolio_sim$max3_ticker[i-1]
    
    #if ticker == 999--&amp;gt;change returns to 0, else use the normal returns
    if(as.numeric(portfolio_sim$max1_ticker[i]) == 999){
      portfolio_sim$max1_ret[i] = 0
      portfolio_sim$max2_ret[i] = 0
      portfolio_sim$max3_ret[i] = 0         
    }else{
      #Include the returns based on above index 
      portfolio_sim$max1_ret[i] = ret[i,portfolio_sim$max1_ticker[i]]
      portfolio_sim$max2_ret[i] = ret[i,portfolio_sim$max2_ticker[i]]
      portfolio_sim$max3_ret[i] = ret[i,portfolio_sim$max3_ticker[i]]      
    }
    
    #Calculate the portfolio
    portfolio_sim$max1_portfolio[i] = as.numeric(portfolio_sim$max1_portfolio[i-1]) * (1+portfolio_sim$max1_ret[i]) 
    portfolio_sim$max2_portfolio[i] = as.numeric(portfolio_sim$max2_portfolio[i-1]) * (1+portfolio_sim$max2_ret[i]) 
    portfolio_sim$max3_portfolio[i] = as.numeric(portfolio_sim$max3_portfolio[i-1]) * (1+portfolio_sim$max3_ret[i]) 
    
    portfolio_sim$tot_portfolio[i] = portfolio_sim$max1_portfolio[i] + portfolio_sim$max2_portfolio[i] + portfolio_sim$max3_portfolio[i] 
  }
  
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;performance-analysis&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Performance analysis&lt;/h2&gt;
&lt;p&gt;Presto! The performance is real bad. Just by looking at the equity curve, I don’t think there’s any incentive to do further performance anlaysis.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#############################################Carry out performance metrics#############################################
#Subset out NAs
portfolio_sim = subset(portfolio_sim,!is.na(portfolio_sim$max1_ticker))
plot(portfolio_sim$tot_portfolio)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/sector_rotation_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Find ROC returns&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
