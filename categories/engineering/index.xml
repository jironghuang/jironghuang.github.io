<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>engineering on Jirong&#39;s sandbox</title>
    <link>/jironghuang.github.io/categories/engineering/</link>
    <description>Recent content in engineering on Jirong&#39;s sandbox</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Tue, 06 Oct 2020 11:50:49 +0800</lastBuildDate>
    <atom:link href="/jironghuang.github.io/categories/engineering/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Developing a performance monitoring component in my fully automated algorithmic trading system</title>
      <link>/jironghuang.github.io/post/designing-and-deploying-a-fully-automated-algorithmic-trading-system/</link>
      <pubDate>Tue, 06 Oct 2020 11:50:49 +0800</pubDate>
      
      <guid>/jironghuang.github.io/post/designing-and-deploying-a-fully-automated-algorithmic-trading-system/</guid>
      <description>

&lt;h2 id=&#34;developing-a-performance-monitoring-system-for-my-algorithmic-trading-system&#34;&gt;Developing a performance monitoring system for my algorithmic trading system&lt;/h2&gt;

&lt;p&gt;It&amp;rsquo;s one thing to backtest your signals and forecasts on historical data but it&amp;rsquo;s a completely different animal in terms of execution. I have written about this &lt;a href=&#34;https://medium.com/datadriveninvestor/designing-and-building-a-fully-automated-algorithmic-trading-portfolio-management-system-6945c6c87620/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Another important component of setting up an algorithmic trading system is performance monitoring. Some important questions I had in mind while developing this component,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;How do I measure my slippage? Commissions paid?&lt;/li&gt;
&lt;li&gt;What are my daily returns? And how do I measure performance of my strategy while accounting for inflow and outflow of cash into the account?&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;how-do-i-measure-my-slippage&#34;&gt;How do I measure my slippage?&lt;/h3&gt;

&lt;p&gt;On this front, I use &lt;a href=&#34;https://ib-insync.readthedocs.io/_modules/ib_insync/flexreport.html&#34;&gt;FlexReport&lt;/a&gt;
function (using REST API) from ib_insync to query the trades made on that day. The function will query the XML report from Interactive Brokers which I subsequently format for daily reporting purposes. The queryId specification had to be set up via IB web account management system. Unfortunately this expires annually which means you have to find a way to remind yourself to refresh this queryId manually every year.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;## Code for querying from IB
report = FlexReport(token, queryId) 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Some trivial code is then written to format the XML into this format below for my email notification,&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/jironghuang.github.io/post/img/Slippage.png&#34; alt=&#34;/post/img/Slippage.png&#34;&gt;&lt;/p&gt;

&lt;h3 id=&#34;what-are-my-daily-returns-how-do-i-measure-performance-of-my-strategy-while-accounting-for-inflow-and-outflow-of-cash-into-the-account&#34;&gt;What are my daily returns? How do I measure performance of my strategy while accounting for inflow and outflow of cash into the account?&lt;/h3&gt;

&lt;p&gt;In the past, I de-prioritised and placed development of performance monitoring at the bottom of my backlog as I could easily query sophiscated performance figures from IB. You may find some of the figures in my blog &lt;a href=&#34;https://jironghuang.github.io/portfolio/portfolio/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Increasingly, however, I found that it is important to understand the performance drivers of portfolio performance by instruments and strategies. To analyze at this granular level, I would have to capture the daily/ hourly levels and returns of instruments and strategies.&lt;/p&gt;

&lt;p&gt;To do that, the system triggers a request to take an accounting snapshot of the portfolio every hour,&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/jironghuang.github.io/post/img/snapshot.png&#34; alt=&#34;/post/img/snapshot.png&#34;&gt;&lt;/p&gt;

&lt;p&gt;But what if there is inflow and outflow of cash - you may ask? I simply rely on Time Weighted Return Formula.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;TWR = [(1+HP1) X&amp;hellip;.(1+HPN)] - 1&lt;/li&gt;
&lt;li&gt;where TWR = Time weighted return&lt;/li&gt;
&lt;li&gt;n = Number of sub-periods&lt;/li&gt;
&lt;li&gt;HP = (End Value of Day- Initial Value of Day + Cash Flow)/ (Initial Value + Cashflow)&lt;/li&gt;
&lt;li&gt;HPN = Return for sub period n&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At the portfolio level, the inflow and outflow would the net cash inflow into the account. At the instrument level, the inflow and outflow would be the net buy/sell trades on that day. You would also have to adjust the instrument asset value to &amp;lsquo;the equity value&amp;rsquo; by downsizing through the overall portfolio leverage factor.&lt;/p&gt;

&lt;p&gt;You may find the implementation of measuring time weighted returns at overall portfolio level in the appendix.&lt;/p&gt;

&lt;p&gt;After all that is mentioned and done, what could I do? I could plot some fancy equity curves as shown below,&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;/jironghuang.github.io/post/img/strategy1_equity_curve.png&#34; alt=&#34;/post/img/strategy1_equity_curve.png&#34;&gt;
&lt;img src=&#34;/jironghuang.github.io/post/img/strategy2_equity_curve.png&#34; alt=&#34;/post/img/strategy2_equity_curve.png&#34;&gt;&lt;/p&gt;

&lt;p&gt;I could also measure realized rolling volatility and do crazy stuff (but unimportant in my opinion) like fama-french 3, 5, or gazillion factors analysis.&lt;/p&gt;

&lt;h3 id=&#34;what-is-in-my-backlog-for-further-enhancement-of-performance-monitoring&#34;&gt;What is in my backlog for further enhancement of performance monitoring?&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Understanding performance drivers systematically with data captured i.e. break down overall portfolio returns into weighted performance drivers by strategies, instruments and time-frame.&lt;/li&gt;
&lt;li&gt;Pushing data files into a relational or non-relational database. But as much as possible, I will try to limit interaction between the trading system and databases during trading hours. In the past, I observed concurrency issues while using SQLite and database server &amp;lsquo;hanging&amp;rsquo; while using relational database such as Mysql. Another alternative would be to host the servers in the cloud. But that would mean I have to pay for extra costs and worry about connectivity issues. Sometimes plain old files could just work?&lt;/li&gt;
&lt;li&gt;Impact of exchange rate effect on portfolio performance. I wrote and created a repository on this in the past. You may visit the link &lt;a href=&#34;https://github.com/jironghuang/RemoveExchangeRateEffects&#34;&gt;here&lt;/a&gt; for more information.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;appendix&#34;&gt;Appendix&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;/jironghuang.github.io/post/img/accounting.png&#34; alt=&#34;/post/img/accounting.png&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Designing, Building and Deploying a Fully Automated Algorithmic Trading System</title>
      <link>/jironghuang.github.io/post/developing-an-accounting-and-performance-monitoring-system-for-my-algorithmic-trading-system/</link>
      <pubDate>Mon, 24 Aug 2020 11:50:49 +0800</pubDate>
      
      <guid>/jironghuang.github.io/post/developing-an-accounting-and-performance-monitoring-system-for-my-algorithmic-trading-system/</guid>
      <description>

&lt;h2 id=&#34;designing-building-and-deploying-a-fully-automated-algorithmic-trading-system&#34;&gt;Designing, Building and Deploying a Fully Automated Algorithmic Trading System&lt;/h2&gt;

&lt;p&gt;As I developed several inter-day trading/ portfolio management algorithms, I also embarked on a journey in parallel to develop a fully automated execution framework that could satisfy my requirements.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Previously orders were executed manually after signals are generated automatically.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&#34;requirements&#34;&gt;Requirements&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;A relatively slow trading system triggered by an hourly task scheduler during trading hours. I’m using Linux cron jobs for this.&lt;/li&gt;
&lt;li&gt;A non event-driven framework. I’m relying on ib_sync framework for my algorithms executed in interactive brokers. The alternative is an event-driven framework (e.g. official IB framework based on asyncio) based on my experience is hard to debug and would be an overkill for my low to medium frequency trading/ portfolio management system.&lt;/li&gt;
&lt;li&gt;Automated trading execution and portfolio adjustments in relation to risks, signals and leverage cap.&lt;/li&gt;
&lt;li&gt;Data ingestion from multiple data sources/ APIs for signal processing, trade executions and logs.&lt;/li&gt;
&lt;li&gt;Inclusion of safeguards and circuit breakers in place before firing any trades.&lt;/li&gt;
&lt;li&gt;Notification through email for errors and daily updates @ start, middle and end of trading day.
-Able to integrate the above steps through Python.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;steps-taken&#34;&gt;Steps taken&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;Without diving into the details of the code, here is the the general flow of my framework. The ‘main’ programs and execution flowcharts are appended at the end of the article.&lt;/li&gt;
&lt;li&gt;Connect to my brokerage account as a new session.
Cancel any open orders. I adopt this option instead of ‘modifying orders’ as it’s much easier. If I were to modify orders, I would have to keep track of the number of filled orders and unfilled orders. As my algorithm is triggered hourly, any unfilled orders in that hourly slot are deemed to deviate significantly from the current price and the chance of being executed at the limit price is pretty low. That being said, in my next iteration, I would prefer to invest time in writing code to ‘modify orders’ instead of a simplistic ‘cancel orders’.&lt;/li&gt;
&lt;li&gt;Generate forecast i.e. Required leverage and weightage from different tickers. I currently write them as local files instead of committing them to a database or storing them as variables as they are more robust during live trading. I do not have to worry about concurrency issues (else codes have to consider mutex and locks), database downtime.&lt;/li&gt;
&lt;li&gt;Obtain net liquidation value of account.&lt;/li&gt;
&lt;li&gt;Read in ticker weights and leverage from file written out in step 3.&lt;/li&gt;
&lt;li&gt;Create order files for different tickers including actions such as ‘Buy’, ‘Sell’ or ‘Do nothing’, Quantity and Limit price. At the moment, I’m using Adaptive Limit 7. Order from Interactive Brokers — which based on my understanding is a discretionary order with limit price as an upper bound. At the moment, I’m unwilling to invest more time on this to gain any further execution alpha as it could be a non-trivial task to dig into the bid-ask order books.&lt;/li&gt;
&lt;li&gt;Check if there are any errors from step 1 to 4 through an error flag. If there is any error, orders will not be sent. If everything cleared, the program will send the orders to the exchange.&lt;/li&gt;
&lt;li&gt;Trades, if any are recorded into a csv file.&lt;/li&gt;
&lt;li&gt;Save current snapshot which includes current positions, trades, net liquidation value and leverage utilized and margins.&lt;/li&gt;
&lt;li&gt;If errors are encountered, an alert will be sent to my gmail.&lt;/li&gt;
&lt;li&gt;Daily updates/ snapshots are sent to my gmail at the start, middle and end of session.&lt;/li&gt;
&lt;li&gt;If the program is triggered at 5am SGT (after US trading hours), the snapshots and trades information are committed to my database.&lt;/li&gt;
&lt;li&gt;Disconnect from current session.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;technology-stack&#34;&gt;Technology stack&lt;/h3&gt;

&lt;p&gt;If you are keen to know my technology stack, I’m currently using the following,&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Linux Mint&lt;/li&gt;
&lt;li&gt;Mint Box, 8GB RAM (but any laptop or virtual private server would suffice)&lt;/li&gt;
&lt;li&gt;Interactive brokers brokerage account (but the framework could be adapted to any brokerages with APIs)&lt;/li&gt;
&lt;li&gt;Interactive brokers gateway (IB Trade Worker Station is an alternative but I do not require any graphical user interface for my purpose)&lt;/li&gt;
&lt;li&gt;ib_insync framework&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;word-of-caution&#34;&gt;Word of Caution&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;This framework is not ideal for tick by tick or even bar by bar (seconds or minutes) trading algorithm since it’s not predicated on speed. An event-driven framework would be a better alternative if speed is required.&lt;/li&gt;
&lt;li&gt;I’m relying on brokerage server side to keep track of the current positions, margins, leverage and orders. In the next stage of development beyond this Minimum Viable Product, I’m keen to develop my own accounting system.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;appendix&#34;&gt;Appendix&lt;/h3&gt;

&lt;p&gt;&lt;img src=&#34;/jironghuang.github.io/post/img/prog1.png&#34; alt=&#34;/post/img/prog1.png&#34;&gt;
&lt;img src=&#34;/jironghuang.github.io/post/img/prog2.png&#34; alt=&#34;/post/img/prog2.png&#34;&gt;
&lt;img src=&#34;/jironghuang.github.io/post/img/flow1.jpeg&#34; alt=&#34;/post/img/flow1.jpeg&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
