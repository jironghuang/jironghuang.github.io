<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>database on Jirong&#39;s sandbox</title>
    <link>/tags/database/</link>
    <description>Recent content in database on Jirong&#39;s sandbox</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 20 Jun 2021 11:50:49 +0800</lastBuildDate>
    
	<atom:link href="/tags/database/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Nifty database framework</title>
      <link>/post/database-framework/</link>
      <pubDate>Sun, 20 Jun 2021 11:50:49 +0800</pubDate>
      
      <guid>/post/database-framework/</guid>
      <description>Database framework for sql queries, execute and rollbacks In database management, it&amp;rsquo;s useful to define atomic blocks. And let&amp;rsquo;s say if something fails within this block, you can always revert to the initial state before any of the transaction happens.
Below is a nifty framework,
 Execute the query while not changing the state in the database. If there&amp;rsquo;re any errors along within the atomic block, you capture the error under exception area.</description>
    </item>
    
    <item>
      <title>Setting up a database for my Jarvis</title>
      <link>/post/jarvis_database/</link>
      <pubDate>Sun, 29 Sep 2019 11:46:49 +0800</pubDate>
      
      <guid>/post/jarvis_database/</guid>
      <description>Setting up a database for my Jarvis As I run more sophiscated trading strategies, I require a proper database for training parameters and records.
Previously, I was using a mix of SQLite, RDA and CSV files - but going forward I will be using Mysql (workbench) to house my data.
Below is an example of database tables for my market neutral strategies. I will be using these tables for the following,</description>
    </item>
    
  </channel>
</rss>